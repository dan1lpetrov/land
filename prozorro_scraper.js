
import 'dotenv/config';
import puppeteer from 'puppeteer';
import { google } from 'googleapis';
import dotenv from 'dotenv';

dotenv.config();

let BASE_URL = process.env.PROZORRO_BASE_URL; // –±—É–¥–µ –æ–Ω–æ–≤–ª–µ–Ω–æ –∑ Google —Ç–∞–±–ª–∏—Ü—ñ

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Google Sheets API
function getGoogleSheets() {
    const auth = new google.auth.GoogleAuth({
        keyFile: process.env.GOOGLE_APPLICATION_CREDENTIALS || './google-credentials.json',
        scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    });
    
    return google.sheets({ version: 'v4', auth });
}

async function getBaseUrlFromGoogleSheet() {
    try {
        const sheets = getGoogleSheets();
        const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID;
        
        const response = await sheets.spreadsheets.values.get({
            spreadsheetId,
            range: '–∑–º—ñ–Ω–Ω—ñ!B6',
        });
        
        if (response.data.values && response.data.values[0] && response.data.values[0][0]) {
            const baseUrl = response.data.values[0][0].trim();
            console.log(`üìã –û—Ç—Ä–∏–º–∞–Ω–æ PROZORRO_BASE_URL –∑ Google —Ç–∞–±–ª–∏—Ü—ñ: ${baseUrl}`);
            return baseUrl;
        } else {
            console.log('‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ PROZORRO_BASE_URL –≤ –∫–ª—ñ—Ç–∏–Ω—Ü—ñ –∑–º—ñ–Ω–Ω—ñ!B6, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –∑ .env');
            return process.env.PROZORRO_BASE_URL;
        }
    } catch (error) {
        console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è PROZORRO_BASE_URL –∑ Google —Ç–∞–±–ª–∏—Ü—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –∑ .env:', error.message);
        return process.env.PROZORRO_BASE_URL;
    }
}

async function getStopWordsFromGoogleSheet() {
    try {
        const sheets = getGoogleSheets();
        const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID;
        
        const response = await sheets.spreadsheets.values.get({
            spreadsheetId,
            range: '–∑–º—ñ–Ω–Ω—ñ!B1',
        });
        
        if (response.data.values && response.data.values[0] && response.data.values[0][0]) {
            const stopWordsText = response.data.values[0][0].trim();
            console.log(`üìã –û—Ç—Ä–∏–º–∞–Ω–æ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞ –∑ Google —Ç–∞–±–ª–∏—Ü—ñ: ${stopWordsText}`);
            
            // –†–æ–∑–±–∏–≤–∞—î–º–æ –ø–æ –∫–æ–º–∞—Ö —ñ –æ—á–∏—â–∞—î–º–æ –≤—ñ–¥ –ø—Ä–æ–±—ñ–ª—ñ–≤
            const stopWords = stopWordsText.split(',').map(word => word.trim().toLowerCase());
            console.log(`üìù –°—Ç–æ–ø-—Å–ª–æ–≤–∞ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó: ${stopWords.join(', ')}`);
            return stopWords;
        } else {
            console.log('‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞ –≤ –∫–ª—ñ—Ç–∏–Ω—Ü—ñ –∑–º—ñ–Ω–Ω—ñ!B1');
            return []; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
        }
    } catch (error) {
        console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–æ–ø-—Å–ª—ñ–≤ –∑ Google —Ç–∞–±–ª–∏—Ü—ñ:', error.message);
        return []; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
    }
}

async function getAuctionLinks(page) {
    console.log('üîç –®—É–∫–∞—é —Ç–æ–≤–∞—Ä–∏ –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ...');
    
    try {
        // –û—á—ñ–∫—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω—å
        await page.waitForSelector('.search-card__content a', { timeout: 10000 });
        
        // –ó–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä–∏
        const links = await page.$$eval('.search-card__content a', (elements) => {
            return elements.map(el => el.href);
        });
        
        console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${links.length} –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ —Ç–æ–≤–∞—Ä–∏ –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ`);
        return links;
        
    } catch (error) {
        console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É –ø–æ—Å–∏–ª–∞–Ω—å:', error.message);
        return [];
    }
}

async function hasNextPage(page, currentPage) {
    try {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∞—É–∫—Ü—ñ–æ–Ω–∏ –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
        const links = await getAuctionLinks(page);
        return links.length > 0;
    } catch (error) {
        console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–∞—Å—Ç—É–ø–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏:', error.message);
        return false;
    }
}

function buildPageUrl(baseUrl, pageNumber) {
    if (pageNumber === 1) {
        return baseUrl;
    }
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤ URL –≤–∂–µ —î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    const separator = baseUrl.includes('?') ? '&' : '?';
    return `${baseUrl}${separator}page=${pageNumber}`;
}

async function goToNextPage(page, currentPage, baseUrl) {
    try {
        const nextPage = currentPage + 1;
        const nextPageUrl = buildPageUrl(baseUrl, nextPage);
        console.log(`üìç –ü–µ—Ä–µ—Ö–æ–¥–∂—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É ${nextPage}: ${nextPageUrl}`);
        
        await page.goto(nextPageUrl, { waitUntil: 'networkidle2', timeout: 30000 });
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        return true;
    } catch (error) {
        console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥—ñ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É:', error.message);
        return false;
    }
}

async function getAuctionResults(page, auctionUrl) {
    console.log(`üîç –ó–±–∏—Ä–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É –∑ auction.prozorro.sale...`);
    
    try {
        // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ URL –∑ prozorro.sale –Ω–∞ auction.prozorro.sale
        const auctionResultsUrl = auctionUrl.replace('https://prozorro.sale/auction/', 'https://auction.prozorro.sale/');
        console.log(`üìç –ü–µ—Ä–µ—Ö–æ–¥–∂—É –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É: ${auctionResultsUrl}`);
        
        await page.goto(auctionResultsUrl, { waitUntil: 'networkidle2', timeout: 60000 });
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        // –ó–±–∏—Ä–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É
        const auctionResults = await page.evaluate(() => {
            try {
                const results = {
                    participantsCount: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    finalPrice: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    winner: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    winnerId: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    priceIncreasePercent: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    preferentialRight: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
                };
                
                // –ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤
                const participantsElement = document.querySelector('.clarification__number-of-participants');
                if (participantsElement) {
                    const countSpan = participantsElement.querySelector('span:last-child');
                    if (countSpan) {
                        results.participantsCount = countSpan.textContent.trim();
                    }
                }
                
                // –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É
                const winnerElement = document.querySelector('.results.is-winner');
                if (winnerElement) {
                    // –§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å
                    const finalPriceElement = winnerElement.querySelector('.results__sum');
                    if (finalPriceElement) {
                        const priceText = finalPriceElement.textContent.trim();
                        // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ –∫—Ä—ñ–º —Ü–∏—Ñ—Ä, –∫—Ä–∞–ø–∫–∏ —Ç–∞ –∫–æ–º–∏, –∑–∞–º—ñ–Ω—é—î–º–æ –∫–æ–º—É –Ω–∞ –∫—Ä–∞–ø–∫—É
                        results.finalPrice = priceText.replace(/[^\d.,]/g, '').replace(',', '.');
                    }
                    
                    // –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å
                    const winnerTextElement = winnerElement.querySelector('.results__text');
                    if (winnerTextElement) {
                        const winnerText = winnerTextElement.textContent.trim();
                        // –í–∏—Ç—è–≥—É—î–º–æ –ü–Ü–ë (–≤—Å–µ –¥–æ –Ω–æ–º–µ—Ä–∞ –≤ –¥—É–∂–∫–∞—Ö)
                        const nameMatch = winnerText.match(/^([^(]+?)\s*\(/);
                        if (nameMatch) {
                            results.winner = nameMatch[1].trim();
                        } else {
                            results.winner = winnerText;
                        }
                        
                        // –í–∏—Ç—è–≥—É—î–º–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä
                        const idMatch = winnerText.match(/\(#(\d+)\)/);
                        if (idMatch) {
                            results.winnerId = idMatch[1];
                        }
                    }
                }
                
                // –í—ñ–¥—Å–æ—Ç–æ–∫ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∏ –±—É–¥–µ —Ä–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–∏–π —Ñ–æ—Ä–º—É–ª–æ—é –≤ Google –¢–∞–±–ª–∏—Ü—ñ
                
                // –ü–µ—Ä–µ–≤–∞–∂–Ω–µ –ø—Ä–∞–≤–æ - —à—É–∫–∞—î–º–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∞—É–∫—Ü—ñ–æ–Ω—É
                const resultsWrapper = document.querySelector('.results-wrapper');
                if (resultsWrapper) {
                    const priorityBidder = resultsWrapper.querySelector('.results__priority-bidder, .results__warning.results__priority-bidder');
                    if (priorityBidder) {
                        const priorityBidderContainer = priorityBidder.closest('.results');
                        if (priorityBidderContainer) {
                            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —É—á–∞—Å–Ω–∏–∫ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º –ø–µ—Ä–µ–º–æ–∂—Ü–µ–º
                            if (priorityBidderContainer.classList.contains('is-winner')) {
                                results.preferentialRight = '–°–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º';
                            } else {
                                // –£—á–∞—Å–Ω–∏–∫ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º —î, –∞–ª–µ –Ω–µ –≤–∏–≥—Ä–∞–≤ - –∑–Ω–∞—á–∏—Ç—å –Ω–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è
                                results.preferentialRight = '–ù–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º';
                            }
                        }
                    } else {
                        // –Ø–∫—â–æ –Ω–µ–º–∞—î —É—á–∞—Å–Ω–∏–∫–∞ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –π–æ–≥–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å
                        const priorityStep = document.querySelector('.priority-step');
                        if (priorityStep) {
                            const priorityText = priorityStep.textContent.trim().toLowerCase();
                            if (priorityText.includes('–±—É–≤ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π')) {
                                results.preferentialRight = '–ë—É–≤ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π';
                            } else if (priorityText.includes('–Ω–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è')) {
                                results.preferentialRight = '–ù–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º';
                            }
                        } else {
                            results.preferentialRight = '–ù–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–µ—Ä–µ–≤–∞–∂–Ω–µ –ø—Ä–∞–≤–æ';
                        }
                    }
                }
                
                return results;
            } catch (error) {
                console.error('–ü–æ–º–∏–ª–∫–∞ –≤ page.evaluate –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∞—É–∫—Ü—ñ–æ–Ω—É:', error);
                return { error: error.message };
            }
        });
        
        if (auctionResults.error) {
            console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–æ—Ä—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∞—É–∫—Ü—ñ–æ–Ω—É: ${auctionResults.error}`);
            return {
                participantsCount: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                finalPrice: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                winner: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                winnerId: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                priceIncreasePercent: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                preferentialRight: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
            };
        }
        
        // –°–∫–æ—Ä–æ—á—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–µ—Ä–µ–≤–∞–∂–Ω–æ–≥–æ –ø—Ä–∞–≤–∞
        auctionResults.preferentialRight = shortenPreferentialRight(auctionResults.preferentialRight);
        
        console.log(`‚úÖ –ó—ñ–±—Ä–∞–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É:`);
        console.log(`  –ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤: ${auctionResults.participantsCount}`);
        console.log(`  –§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å: ${auctionResults.finalPrice}`);
        console.log(`  –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å: ${auctionResults.winner}`);
        console.log(`  ID –ø–µ—Ä–µ–º–æ–∂—Ü—è: ${auctionResults.winnerId}`);
        console.log(`  –í—ñ–¥—Å–æ—Ç–æ–∫ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∏: ${auctionResults.priceIncreasePercent}%`);
        console.log(`  –ü–µ—Ä–µ–≤–∞–∂–Ω–µ –ø—Ä–∞–≤–æ: ${auctionResults.preferentialRight}`);
        
        return auctionResults;
        
    } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–æ—Ä—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∞—É–∫—Ü—ñ–æ–Ω—É:`, error.message);
        return {
            participantsCount: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            finalPrice: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            winner: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            winnerId: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            priceIncreasePercent: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            preferentialRight: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
        };
    }
}

async function getAuctionDetailsFromUaLand(page, auctionUrl) {
    console.log(`üîç –®—É–∫–∞—é –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –Ω–∞ ua.land...`);
    
    try {
        // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ URL –∑ prozorro.sale –Ω–∞ ua.land
        const uaLandUrl = auctionUrl.replace('https://prozorro.sale/auction/', 'https://ua.land/auctions/');
        console.log(`üìç –ü–µ—Ä–µ—Ö–æ–¥–∂—É –Ω–∞: ${uaLandUrl}`);
        
        await page.goto(uaLandUrl, { waitUntil: 'networkidle2', timeout: 60000 });
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        await new Promise(resolve => setTimeout(resolve, 5000));
        
        // –†–æ–∑–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏
        console.log(`üîç –†–æ–∑–∫—Ä–∏–≤–∞—é –≤—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏...`);
        try {
            const accordionSelector = '.MuiAccordion-root .MuiAccordionSummary-root';
            await page.waitForSelector(accordionSelector, { timeout: 10000 });
            
            // –û—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å accordion –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
            const accordionCount = await page.evaluate(() => {
                return document.querySelectorAll('.MuiAccordion-root .MuiAccordionSummary-root').length;
            });
            
            console.log(`  –ó–Ω–∞–π–¥–µ–Ω–æ ${accordionCount} accordion –µ–ª–µ–º–µ–Ω—Ç—ñ–≤`);
            
            // –†–æ–∑–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏ —á–µ—Ä–µ–∑ JavaScript
            await page.evaluate(() => {
                const accordions = document.querySelectorAll('.MuiAccordion-root');
                accordions.forEach(accordion => {
                    const summary = accordion.querySelector('.MuiAccordionSummary-root');
                    if (summary && !accordion.classList.contains('Mui-expanded')) {
                        summary.click();
                    }
                });
            });
            
            console.log('  ‚úÖ –í—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏ —Ä–æ–∑–∫—Ä–∏—Ç–æ —á–µ—Ä–µ–∑ JavaScript');
            
            // –û—á—ñ–∫—É—î–º–æ –ø–æ–≤–Ω–æ–≥–æ —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è
            await new Promise(resolve => setTimeout(resolve, 3000));
            console.log('‚úÖ –í—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏ —Ä–æ–∑–∫—Ä–∏—Ç–æ');
            
        } catch (accordionError) {
            console.log(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ–∑–∫—Ä–∏—Ç—Ç—ñ accordion –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: ${accordionError.message}`);
        }
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è JavaScript
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // –ó–±–∏—Ä–∞—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –ª–æ–≥—ñ–∫—É –∑ test_ua_land.js
        const additionalDetails = await page.evaluate(() => {
            try {
                const results = {
                    // –û—Å–Ω–æ–≤–Ω—ñ –¥–∞–Ω—ñ
                    lotDescription: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    area: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    startPrice: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    normativePrice: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    expertPrice: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    cadastralNumber: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    region: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    settlement: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    organizationName: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    contactPerson: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    phoneNumber: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    auctionDate: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    proposalPeriod: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    propertyClassifier: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    lotExhibitedBy: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    coordinates: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    koatuu: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    postalCode: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
                };
                
                // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ h6 –µ–ª–µ–º–µ–Ω—Ç–∏ –æ–¥–∏–Ω —Ä–∞–∑
                const allH6Elements = document.querySelectorAll('h6');
                
                // –û–ø–∏—Å –ª–æ—Ç—É
                const lotDescElement = document.querySelector('.MuiGrid-spacing-xs-3 div:nth-of-type(3) div.MuiAccordionDetails-root');
                if (lotDescElement && lotDescElement.textContent.trim()) {
                    results.lotDescription = lotDescElement.textContent.trim();
                }
                
                // –ü–ª–æ—â–∞ –∑–µ–º–µ–ª—å–Ω–æ—ó –¥—ñ–ª—è–Ω–∫–∏, –≥–∞
                let areaElement = null;
                
                // –í–∞—Ä—ñ–∞–Ω—Ç 1: div:nth-of-type(4) h5
                areaElement = document.querySelector('div:nth-of-type(4) h5');
                if (!areaElement || !areaElement.textContent.trim()) {
                    // –í–∞—Ä—ñ–∞–Ω—Ç 2: —à—É–∫–∞—î–º–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ
                    const mainContainer = document.querySelector('main') || document.querySelector('.MuiContainer-root') || document.body;
                    areaElement = mainContainer.querySelector('div:nth-of-type(4) h5');
                }
                if (!areaElement || !areaElement.textContent.trim()) {
                    // –í–∞—Ä—ñ–∞–Ω—Ç 3: —à—É–∫–∞—î–º–æ —Å–µ—Ä–µ–¥ –≤—Å—ñ—Ö h5 –∑ —á–∏—Å–ª–æ–≤–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º
                    const allH5 = document.querySelectorAll('h5');
                    for (const h5 of allH5) {
                        const text = h5.textContent.trim();
                        if (text && /^\d+\.?\d*$/.test(text)) { // –ß–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                            areaElement = h5;
                    break;
                        }
                    }
                }
                
                if (areaElement && areaElement.textContent.trim()) {
                    results.area = areaElement.textContent.trim();
                }
                
                // –°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞
                const startPriceElement = document.querySelector('h3.MuiTypography-colorPrimary');
                if (startPriceElement && startPriceElement.textContent.trim()) {
                    const priceText = startPriceElement.textContent.trim();
                    // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ –∫—Ä—ñ–º —Ü–∏—Ñ—Ä, –∫—Ä–∞–ø–∫–∏ —Ç–∞ –∫–æ–º–∏
                    results.startPrice = priceText.replace(/[^\d.,]/g, '');
                }
                
                // –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
                for (const h6 of allH6Elements) {
                    const text = h6.textContent.trim();
                    if (text === '–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω:') {
                        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                        const parentContainer = h6.closest('.MuiGrid-container');
                        if (parentContainer) {
                            // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                            const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                            if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                                const valueText = valueElement.textContent.trim();
                                if (valueText === '–ù–µ –≤–∫–∞–∑–∞–Ω–æ') {
                                    results.normativePrice = '–ù–µ –≤–∫–∞–∑–∞–Ω–æ';
                                } else {
                                    results.normativePrice = valueText.replace(/[^\d.,]/g, '');
                                }
                                break;
                            }
                        }
                    }
                }
                
                // –Ø–∫—â–æ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –æ—Ü—ñ–Ω–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
                if (results.normativePrice === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                    results.normativePrice = '–ù–µ –≤–∫–∞–∑–∞–Ω–æ';
                }
                
                // –ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
                for (const h6 of allH6Elements) {
                    const text = h6.textContent.trim();
                    if (text === '–ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω:') {
                        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                        const parentContainer = h6.closest('.MuiGrid-container');
                        if (parentContainer) {
                            // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                            const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                            if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                                results.expertPrice = valueElement.textContent.trim().replace(/[^\d.,]/g, '');
                                break;
                            }
                        }
                    }
                }
                
                // –ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä - —Å–ø–æ—á–∞—Ç–∫—É —à—É–∫–∞—î–º–æ –≤ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ –º–∞–π–Ω–∞
                let cadastralNumber = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
                
                // –ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä - —à—É–∫–∞—î–º–æ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—ñ —Å—ñ—Ç–∫–∏
                const cadastralLabel = Array.from(allH6Elements).find(h6 => h6.textContent.trim() === '–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä:');
                
                if (cadastralLabel) {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—ñ—Ç–∫–∏
                    const gridContainer = cadastralLabel.closest('.MuiGrid-container');
                    if (gridContainer) {
                        // –®—É–∫–∞—î–º–æ –≤ —Ç–æ–º—É –∂ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∞–±–æ h6 –∑ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–º –Ω–æ–º–µ—Ä–æ–º
                        const cadastralLink = gridContainer.querySelector('a[href*="cadnum"]');
                        if (cadastralLink) {
                            cadastralNumber = cadastralLink.textContent.trim();
                        } else {
                            // –Ø–∫—â–æ –Ω–µ–º–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —à—É–∫–∞—î–º–æ h6 –≤ —Ç–æ–º—É –∂ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ
                            const allH6InContainer = gridContainer.querySelectorAll('h6');
                            for (const h6 of allH6InContainer) {
                                if (h6.textContent.trim() !== '–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä:' && /^[0-9:]+$/.test(h6.textContent.trim())) {
                                    cadastralNumber = h6.textContent.trim();
                                    break;
                                }
                            }
                        }
                    }
                }
                
                // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ, —à—É–∫–∞—î–º–æ –∑–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º
                if (cadastralNumber === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                    const cadastralElement = document.querySelector('.MuiGrid-spacing-xs-1 a.MuiLink-underlineAlways');
                    if (cadastralElement && cadastralElement.textContent.trim()) {
                        const cadastralText = cadastralElement.textContent.trim();
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –¥—ñ–π—Å–Ω–æ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä (–º—ñ—Å—Ç–∏—Ç—å —Ü–∏—Ñ—Ä–∏ —Ç–∞ –¥–≤–æ–∫—Ä–∞–ø–∫–∏)
                        if (/^\d+:\d+:\d+:\d+$/.test(cadastralText)) {
                            cadastralNumber = cadastralText;
                        }
                    }
                }
                
                results.cadastralNumber = cadastralNumber;
                
                // –û–±–ª–∞—Å—Ç—å - —à—É–∫–∞—î–º–æ h6 –∑ —Ç–µ–∫—Å—Ç–æ–º "–û–±–ª–∞—Å—Ç—å:" —ñ –±–µ—Ä–µ–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π h6
                const regionLabel = Array.from(allH6Elements).find(h6 => h6.textContent.trim() === '–û–±–ª–∞—Å—Ç—å:');
                if (regionLabel) {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π h6 –µ–ª–µ–º–µ–Ω—Ç
                    const allH6Array = Array.from(allH6Elements);
                    const regionIndex = allH6Array.indexOf(regionLabel);
                    if (regionIndex !== -1 && regionIndex + 1 < allH6Array.length) {
                        const nextH6 = allH6Array[regionIndex + 1];
                        if (nextH6.textContent.trim() && nextH6.textContent.trim() !== '–ù–µ –≤–∫–∞–∑–∞–Ω–æ') {
                            results.region = nextH6.textContent.trim();
                        }
                    }
                }
                
                // –ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç - —à—É–∫–∞—î–º–æ h6 –∑ —Ç–µ–∫—Å—Ç–æ–º "–ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç:" —ñ –±–µ—Ä–µ–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π h6
                const settlementLabel = Array.from(allH6Elements).find(h6 => h6.textContent.trim() === '–ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç:');
                if (settlementLabel) {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π h6 –µ–ª–µ–º–µ–Ω—Ç
                    const allH6Array = Array.from(allH6Elements);
                    const settlementIndex = allH6Array.indexOf(settlementLabel);
                    if (settlementIndex !== -1 && settlementIndex + 1 < allH6Array.length) {
                        const nextH6 = allH6Array[settlementIndex + 1];
                        if (nextH6.textContent.trim() && nextH6.textContent.trim() !== '–ù–µ –≤–∫–∞–∑–∞–Ω–æ') {
                            results.settlement = nextH6.textContent.trim();
                        }
                    }
                }
                
                // –û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è - —à—É–∫–∞—î–º–æ –≤ accordion "–î–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å–Ω–∏–∫—ñ–≤ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º"
                const accordions = document.querySelectorAll('.MuiAccordion-root');
                for (const accordion of accordions) {
                    const summary = accordion.querySelector('.MuiAccordionSummary-root');
                    if (summary && summary.textContent.includes('–î–∞–Ω—ñ –ø—Ä–æ —É—á–∞—Å–Ω–∏–∫—ñ–≤ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º')) {
                        const details = accordion.querySelector('.MuiAccordionDetails-root');
                        if (details) {
                            const orgMatch = details.textContent.match(/–ü–æ–≤–Ω–∞ —é—Ä–∏–¥–∏—á–Ω–∞ –Ω–∞–∑–≤–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó:\s*([^\n]+?)(?:\s*–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó:|$)/);
                            if (orgMatch) {
                                results.organizationName = orgMatch[1].trim();
                                break;
                            }
                        }
                    }
                }
                
                // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞ - —à—É–∫–∞—î–º–æ –≤ accordion "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞"
                for (const accordion of accordions) {
                    const summary = accordion.querySelector('.MuiAccordionSummary-root');
                    if (summary && summary.textContent.includes('–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞')) {
                        const details = accordion.querySelector('.MuiAccordionDetails-root');
                        if (details) {
                            const pibMatch = details.textContent.match(/–ü–Ü–ë:\s*([^\n]+?)(?:\s*E-mail:|$)/);
                            if (pibMatch) {
                                results.contactPerson = pibMatch[1].trim();
                            }
                            
                            const phoneMatch = details.textContent.match(/–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:\s*([^\n]+?)(?:\s*–í–µ–± –∞–¥—Ä–µ—Å–∞:|$)/);
                            if (phoneMatch) {
                                results.phoneNumber = phoneMatch[1].trim();
                            }
                            break;
                        }
                    }
                }
                
                // –î–∞—Ç–∞ –∞—É–∫—Ü—ñ–æ–Ω—É - —à—É–∫–∞—î–º–æ h5 –∑ –¥–∞—Ç–æ—é
                const allH5 = document.querySelectorAll('h5');
                for (const h5 of allH5) {
                    const text = h5.textContent.trim();
                    if (text && /^\d{2}\.\d{2}\.\d{4}\s+\d{2}:\d{2}$/.test(text)) {
                        results.auctionDate = text;
                        break;
                    }
                }
                
                // –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –º–∞–π–Ω–∞ - —à—É–∫–∞—î–º–æ –≤ accordion "–°–∫–ª–∞–¥ –ª–æ—Ç–∞"
                for (const accordion of accordions) {
                    const summary = accordion.querySelector('.MuiAccordionSummary-root');
                    if (summary && summary.textContent.includes('–°–∫–ª–∞–¥ –ª–æ—Ç–∞')) {
                        const details = accordion.querySelector('.MuiAccordionDetails-root');
                        if (details) {
                            const classifierMatch = details.textContent.match(/–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –º–∞–π–Ω–∞\/–∞–∫—Ç–∏–≤—ñ–≤:([^\n]+)/);
                            if (classifierMatch) {
                                results.propertyClassifier = classifierMatch[1].trim();
                                break;
                            }
                        }
                    }
                }
                
                // –õ–æ—Ç –≤–∏—Å—Ç–∞–≤–ª—è—î—Ç—å—Å—è - —Å–ø–æ—á–∞—Ç–∫—É —à—É–∫–∞—î–º–æ –≤ h4 –µ–ª–µ–º–µ–Ω—Ç–∞—Ö
                let lotExhibitedBy = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
                
                // –®—É–∫–∞—î–º–æ –≤ h4 –µ–ª–µ–º–µ–Ω—Ç–∞—Ö
                const h4Elements = document.querySelectorAll('h4');
                for (const h4 of h4Elements) {
                    const text = h4.textContent.trim();
                    const lotMatch = text.match(/(\d+)\s*—Ç–æ—Ä–≥–∏/i);
                    if (lotMatch) {
                        lotExhibitedBy = lotMatch[1];
                        break;
                    }
                }
                
                // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ h4, —à—É–∫–∞—î–º–æ –≤ –æ–ø–∏—Å—ñ –ª–æ—Ç—É
                if (lotExhibitedBy === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ' && results.lotDescription && results.lotDescription !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                    const lotMatch = results.lotDescription.match(/(\d+)\s*—Ç–æ—Ä–≥/i);
                    if (lotMatch) {
                        lotExhibitedBy = lotMatch[1];
                    }
                }
                
                results.lotExhibitedBy = lotExhibitedBy;
                
                // –ü–µ—Ä—ñ–æ–¥ –ø–æ–¥–∞—á—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π - —à—É–∫–∞—î–º–æ –≤ h6 –µ–ª–µ–º–µ–Ω—Ç–∞—Ö
                for (const h6 of allH6Elements) {
                    const text = h6.textContent.trim();
                    // –®—É–∫–∞—î–º–æ –ø–µ—Ä—ñ–æ–¥ –∑ –¥–∞—Ç–∞–º–∏
                    if (text.includes('–∑ ') && text.includes(' –ø–æ ') && text.includes('.')) {
                        results.proposalPeriod = text;
                        break;
                    }
                }
                
                // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ - —à—É–∫–∞—î–º–æ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—ñ —Å—ñ—Ç–∫–∏
                const coordLabel = Array.from(allH6Elements).find(h6 => h6.textContent.trim() === '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –æ–±\'—î–∫—Ç—É:');
                if (coordLabel) {
                    const gridContainer = coordLabel.closest('.MuiGrid-container');
                    if (gridContainer) {
                        // –®—É–∫–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Google Maps –∞–±–æ —Ç–µ–∫—Å—Ç –∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
                        const coordLink = gridContainer.querySelector('a[href*="google.com/maps"]');
                        if (coordLink) {
                            results.coordinates = coordLink.textContent.trim();
                        } else {
                            // –Ø–∫—â–æ –Ω–µ–º–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —à—É–∫–∞—î–º–æ h6 –∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
                            const allH6InContainer = gridContainer.querySelectorAll('h6');
                            for (const h6 of allH6InContainer) {
                                if (h6.textContent.trim() !== '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –æ–±\'—î–∫—Ç—É:' && /^[0-9.,\s]+$/.test(h6.textContent.trim())) {
                                    results.coordinates = h6.textContent.trim();
                                    break;
                                }
                            }
                        }
                    }
                }
                
                // –ö–û–ê–¢–£–£ - —à—É–∫–∞—î–º–æ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—ñ —Å—ñ—Ç–∫–∏
                const koatuuLabel = Array.from(allH6Elements).find(h6 => h6.textContent.trim() === '–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø–æ –ö–û–ê–¢–£–£:');
                if (koatuuLabel) {
                    const gridContainer = koatuuLabel.closest('.MuiGrid-container');
                    if (gridContainer) {
                        // –®—É–∫–∞—î–º–æ h6 –∑ –ö–û–ê–¢–£–£
                        const allH6InContainer = gridContainer.querySelectorAll('h6');
                        for (const h6 of allH6InContainer) {
                            if (h6.textContent.trim() !== '–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø–æ –ö–û–ê–¢–£–£:' && /^[0-9]+$/.test(h6.textContent.trim())) {
                                results.koatuu = h6.textContent.trim();
                                break;
                            }
                        }
                    }
                }
                
                // –ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å - —à—É–∫–∞—î–º–æ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—ñ —Å—ñ—Ç–∫–∏
                const postalLabel = Array.from(allH6Elements).find(h6 => h6.textContent.trim() === '–ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å:');
                if (postalLabel) {
                    const gridContainer = postalLabel.closest('.MuiGrid-container');
                    if (gridContainer) {
                        // –®—É–∫–∞—î–º–æ h6 –∑ –ø–æ—à—Ç–æ–≤–∏–º —ñ–Ω–¥–µ–∫—Å–æ–º
                        const allH6InContainer = gridContainer.querySelectorAll('h6');
                        for (const h6 of allH6InContainer) {
                            if (h6.textContent.trim() !== '–ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å:') {
                                const postalText = h6.textContent.trim();
                                results.postalCode = postalText === '–ù–µ –≤–∫–∞–∑–∞–Ω–æ' ? '–ù–µ –≤–∫–∞–∑–∞–Ω–æ' : postalText;
                                break;
                            }
                        }
                    }
                }
            
                return results;
            } catch (error) {
                console.error('–ü–æ–º–∏–ª–∫–∞ –≤ page.evaluate:', error);
                return { error: error.message };
            }
        });
        
        if (additionalDetails.error) {
            console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–æ—Ä—ñ –¥–∞–Ω–∏—Ö: ${additionalDetails.error}`);
            return {
                region: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                settlement: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                coordinates: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                koatuu: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                organizationName: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                contactPerson: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                phoneNumber: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                auctionDate: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                proposalPeriod: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                propertyClassifier: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                lotExhibitedBy: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                postalCode: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
            };
        }
        
        console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –Ω–∞ ua.land:`);
        console.log(`  –û–±–ª–∞—Å—Ç—å: ${additionalDetails.region}`);
        console.log(`  –ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç: ${additionalDetails.settlement}`);
        console.log(`  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏: ${additionalDetails.coordinates}`);
        console.log(`  –ö–û–ê–¢–£–£: ${additionalDetails.koatuu}`);
        console.log(`  –û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è: ${additionalDetails.organizationName}`);
        console.log(`  –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞: ${additionalDetails.contactPerson}`);
        console.log(`  –¢–µ–ª–µ—Ñ–æ–Ω: ${additionalDetails.phoneNumber}`);
        console.log(`  –î–∞—Ç–∞ –∞—É–∫—Ü—ñ–æ–Ω—É: ${additionalDetails.auctionDate}`);
        console.log(`  –ü–µ—Ä—ñ–æ–¥ –ø–æ–¥–∞—á—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π: ${additionalDetails.proposalPeriod}`);
        console.log(`  –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –º–∞–π–Ω–∞: ${additionalDetails.propertyClassifier}`);
        console.log(`  –õ–æ—Ç –≤–∏—Å—Ç–∞–≤–ª—è—î—Ç—å—Å—è: ${additionalDetails.lotExhibitedBy}`);
        console.log(`  –ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å: ${additionalDetails.postalCode}`);
        
        return additionalDetails;
        
    } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–æ—Ä—ñ –¥–∞–Ω–∏—Ö –∑ ua.land:`, error.message);
        return {
            region: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            settlement: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            coordinates: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            koatuu: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            organizationName: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            contactPerson: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            phoneNumber: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            auctionDate: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            proposalPeriod: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            propertyClassifier: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            lotExhibitedBy: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            postalCode: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
        };
    }
}

async function getAuctionTitle(page, auctionUrl) {
    try {
        await page.goto(auctionUrl, { waitUntil: 'networkidle2', timeout: 30000 });
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // –û—Ç—Ä–∏–º—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤—É –ª–æ—Ç—É
        const lotTitle = await page.evaluate(() => {
            const titleElement = document.querySelector('.information-title span');
            return titleElement ? titleElement.textContent.trim() : '';
        });
        
        return lotTitle;
    } catch (error) {
        console.log(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –Ω–∞–∑–≤–∏ –∞—É–∫—Ü—ñ–æ–Ω—É: ${error.message}`);
        return '';
    }
}

function shouldSkipAuction(lotTitle, stopWords) {
    if (!lotTitle) return true;
    
    const lowerTitle = lotTitle.toLowerCase();
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω–µ —Å—Ç–æ–ø-—Å–ª–æ–≤–æ
    for (const stopWord of stopWords) {
        if (lowerTitle.includes(stopWord)) {
            console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞—é –∞—É–∫—Ü—ñ–æ–Ω: "${lotTitle}" (–º—ñ—Å—Ç–∏—Ç—å —Å—Ç–æ–ø-—Å–ª–æ–≤–æ: "${stopWord}")`);
            return true;
        }
    }
    
    return false;
}

function shortenPreferentialRight(preferentialRight) {
    if (!preferentialRight || preferentialRight === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
        return '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
    }
    
    const lowerText = preferentialRight.toLowerCase();
    
    if (lowerText.includes('—Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º')) {
        return '–°–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è';
    }
    
    if (lowerText.includes('–Ω–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º')) {
        return '–ù–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è';
    }
    
    if (lowerText.includes('–±—É–≤ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π')) {
        return '–ë—É–≤ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π';
    }
    
    if (lowerText.includes('–Ω–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–µ—Ä–µ–≤–∞–∂–Ω–µ –ø—Ä–∞–≤–æ')) {
        return '–ù–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó';
    }
    
    // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
    return preferentialRight;
}

async function getAuctionDetails(page, auctionUrl, searchPageUrl = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
    console.log(`üîç –ó–±–∏—Ä–∞—é –¥–∞–Ω—ñ –∑: ${auctionUrl}`);
    
    try {
        await page.goto(auctionUrl, { waitUntil: 'networkidle2', timeout: 30000 });
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        console.log('‚è≥ –û—á—ñ–∫—É—é –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏...');
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        // –ó–±–∏—Ä–∞—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
        const details = await page.evaluate(() => {
            // URL
            const url = window.location.href;
            
            // –û–ø–∏—Å –ª–æ—Ç—É - .information-title span
            let lotDescription = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const lotTitle = document.querySelector('.information-title span');
            if (lotTitle) {
                lotDescription = lotTitle.textContent.trim();
            }
            
            // –ü–ª–æ—â–∞ –¥—ñ–ª—è–Ω–∫–∏, –≥–∞ - —à—É–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∑ —Ç–µ–∫—Å—Ç–æ–º "–ü–ª–æ—â–∞ –¥—ñ–ª—è–Ω–∫–∏:" —ñ –±–µ—Ä–µ–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è
            let area = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const areaElements = document.querySelectorAll('.characteristics__item');
            for (const element of areaElements) {
                const nameElement = element.querySelector('.characteristics__name');
                if (nameElement && nameElement.textContent.trim() === '–ü–ª–æ—â–∞ –¥—ñ–ª—è–Ω–∫–∏:') {
                    const valueElement = element.querySelector('.characteristics__value');
                    if (valueElement) {
                        // –ó–∞–º—ñ–Ω—é—î–º–æ –∫–æ–º—É –Ω–∞ –∫—Ä–∞–ø–∫—É —Ç–∞ –≤–∏–¥–∞–ª—è—î–º–æ "–≥–∞" –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É
                        area = valueElement.textContent.trim().replace(',', '.').replace(/\s*–≥–∞\s*/g, '');
                        break;
                    }
                }
            }
            
            // –°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞ - —à—É–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∑ —Ç–µ–∫—Å—Ç–æ–º "–°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞ –ø—Ä–æ–¥–∞–∂—É:" —ñ –±–µ—Ä–µ–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è
            let startPrice = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const priceElements = document.querySelectorAll('.auction-info__item');
            for (const element of priceElements) {
                const nameElement = element.querySelector('.auction-info__name');
                if (nameElement && nameElement.textContent.trim().includes('–°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞ –ø—Ä–æ–¥–∞–∂—É:')) {
                    const valueElement = element.querySelector('.auction-info__value');
                    if (valueElement) {
                        // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ –∫—Ä—ñ–º —Ü–∏—Ñ—Ä, –∫—Ä–∞–ø–∫–∏ —Ç–∞ –∫–æ–º–∏, –ø–æ—Ç—ñ–º –∑–∞–º—ñ–Ω—é—î–º–æ –∫–æ–º—É –Ω–∞ –∫—Ä–∞–ø–∫—É
                        startPrice = valueElement.textContent.trim().replace(/[^\d.,]/g, '').replace(',', '.');
                        break;
                    }
                }
            }
            
            // –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω
            let normativePrice = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const normativeElement = document.querySelector('[data-field="normative-price"], .normative-price');
            if (normativeElement) {
                normativePrice = normativeElement.textContent.trim().replace(/[^\d.,]/g, '');
            }
            
            // –ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω - —à—É–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∑ —Ç–µ–∫—Å—Ç–æ–º "–ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞:"
            let expertPrice = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            for (const element of priceElements) {
                const nameElement = element.querySelector('.auction-info__name');
                if (nameElement && nameElement.textContent.trim() === '–ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞:') {
                    const valueElement = element.querySelector('.auction-info__value');
                    if (valueElement) {
                        // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ –∫—Ä—ñ–º —Ü–∏—Ñ—Ä, –∫—Ä–∞–ø–∫–∏ —Ç–∞ –∫–æ–º–∏, –ø–æ—Ç—ñ–º –∑–∞–º—ñ–Ω—é—î–º–æ –∫–æ–º—É –Ω–∞ –∫—Ä–∞–ø–∫—É
                        expertPrice = valueElement.textContent.trim().replace(/[^\d.,]/g, '').replace(',', '.');
                        break;
                    }
                }
            }
            
            // –ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä - —à—É–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∑ —Ç–µ–∫—Å—Ç–æ–º "–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä"
            let cadastralNumber = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const cadastralElements = document.querySelectorAll('.sc-rt__option-wrapper');
            for (const element of cadastralElements) {
                const nameElement = element.querySelector('.sc-rt__option-name');
                if (nameElement && nameElement.textContent.trim() === '–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä') {
                    const valueElement = element.querySelector('.sc-rt__option-value');
                    if (valueElement) {
                        cadastralNumber = valueElement.textContent.trim();
                        break;
                    }
                }
            }
            
            // –û–±–ª–∞—Å—Ç—å - –Ω–µ —à—É–∫–∞—î–º–æ –Ω–∞ prozorro.sale
            let region = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            
            // –ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç - –Ω–µ —à—É–∫–∞—î–º–æ –Ω–∞ prozorro.sale
            let settlement = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            
            // –ö–û–ê–¢–£–£
            let koatuu = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const koatuuElement = document.querySelector('[data-field="koatuu"], .koatuu');
            if (koatuuElement) {
                koatuu = koatuuElement.textContent.trim();
            }
            
            // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –æ–±'—î–∫—Ç—É
            let coordinates = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const coordinatesElement = document.querySelector('[data-field="coordinates"], .coordinates');
            if (coordinatesElement) {
                coordinates = coordinatesElement.textContent.trim();
            }
            
            // –°—Ç–∞—Ç—É—Å –∞—É–∫—Ü—ñ–æ–Ω—É - —à—É–∫–∞—î–º–æ –≤ .news-card__status
            let auctionStatus = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const statusElement = document.querySelector('.news-card__status');
            if (statusElement) {
                auctionStatus = statusElement.textContent.trim();
            }
            
            // –ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤
            let participantsCount = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const participantsElement = document.querySelector('.participants-count, .bidders, [data-field="participants"]');
            if (participantsElement) {
                participantsCount = participantsElement.textContent.trim();
            }
            
            // –§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å
            let finalPrice = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const finalPriceElement = document.querySelector('.final-price, .winning-bid, [data-field="final-price"]');
            if (finalPriceElement) {
                finalPrice = finalPriceElement.textContent.trim().replace(/[^\d.,]/g, '');
            }
            
            // –í—ñ–¥—Å–æ—Ç–æ–∫ –Ω–∞ —è–∫–∏–π —Ñ—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –±—ñ–ª—å—à–∞ –Ω—ñ–∂ —Å—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞
            let priceIncreasePercent = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            if (startPrice !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ' && finalPrice !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                const start = parseFloat(startPrice.replace(',', '.'));
                const final = parseFloat(finalPrice.replace(',', '.'));
                if (!isNaN(start) && !isNaN(final) && start > 0) {
                    const increase = ((final - start) / start) * 100;
                    priceIncreasePercent = increase.toFixed(2);
                }
            }
            
            // –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å (–Ω–∞–∑–≤–∞)
            let winner = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            const winnerElement = document.querySelector('.winner, .winning-bidder, [data-field="winner"]');
            if (winnerElement) {
                winner = winnerElement.textContent.trim();
            }
            
            // –ü–µ—Ä–µ–≤–∞–∂–Ω–µ –ø—Ä–∞–≤–æ - —Ç—ñ–ª—å–∫–∏ —Å—Ç–∞—Ç—É—Å, –±–µ–∑ –∑–±–æ—Ä—É –Ω–∞–∑–≤–∏ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó
            let preferentialRightStatus = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            
            // –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è —É—á–∞—Å–Ω–∏–∫ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –≤–∏–≥—Ä–∞—Ç–∏
            // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∞—É–∫—Ü—ñ–æ–Ω—É
            const resultsWrapper = document.querySelector('.results-wrapper');
            if (resultsWrapper) {
                // –Ø–∫—â–æ —î —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ó—ó –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è
                const priorityBidder = resultsWrapper.querySelector('.results__priority-bidder, .results__warning.results__priority-bidder');
                
                if (priorityBidder) {
                    const priorityBidderContainer = priorityBidder.closest('.results');
                    if (priorityBidderContainer) {
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —É—á–∞—Å–Ω–∏–∫ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º –ø–µ—Ä–µ–º–æ–∂—Ü–µ–º
                        if (priorityBidderContainer.classList.contains('is-winner')) {
                            preferentialRightStatus = '–°–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º';
                        } else {
                            // –£—á–∞—Å–Ω–∏–∫ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º —î, –∞–ª–µ –Ω–µ –≤–∏–≥—Ä–∞–≤ - –∑–Ω–∞—á–∏—Ç—å –Ω–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è
                            preferentialRightStatus = '–ù–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º';
                        }
                    }
                } else {
                    // –Ø–∫—â–æ –Ω–µ–º–∞—î —É—á–∞—Å–Ω–∏–∫–∞ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –π–æ–≥–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å
                    const priorityStep = document.querySelector('.priority-step');
                    if (priorityStep) {
                        const priorityText = priorityStep.textContent.trim().toLowerCase();
                        if (priorityText.includes('–±—É–≤ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π')) {
                            preferentialRightStatus = '–ë—É–≤ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π';
                        } else if (priorityText.includes('–Ω–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è')) {
                            preferentialRightStatus = '–ù–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º';
                        }
                    } else {
                        preferentialRightStatus = '–ù–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–µ—Ä–µ–≤–∞–∂–Ω–µ –ø—Ä–∞–≤–æ';
                    }
                }
            }
            
            return {
                url,
                lotDescription,
                area,
                startPrice,
                normativePrice,
                expertPrice,
                cadastralNumber,
                region,
                settlement,
                koatuu,
                coordinates,
                auctionStatus,
                participantsCount,
                finalPrice,
                priceIncreasePercent,
                winner,
                preferentialRightStatus
            };
        });
        
        console.log(`‚úÖ –ó—ñ–±—Ä–∞–Ω–æ –¥–∞–Ω—ñ –¥–ª—è: ${auctionUrl}`);
        console.log(`üìù –û–ø–∏—Å –ª–æ—Ç—É: ${details.lotDescription.substring(0, 100)}...`);
        console.log(`üìä –ó—ñ–±—Ä–∞–Ω—ñ –¥–∞–Ω—ñ:`);
        console.log(`  –ü–ª–æ—â–∞: ${details.area}`);
        console.log(`  –°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞: ${details.startPrice}`);
        console.log(`  –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –æ—Ü—ñ–Ω–∫–∞: ${details.normativePrice}`);
        console.log(`  –ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –æ—Ü—ñ–Ω–∫–∞: ${details.expertPrice}`);
        console.log(`  –ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä: ${details.cadastralNumber}`);
        console.log(`  –û–±–ª–∞—Å—Ç—å: ${details.region}`);
        console.log(`  –ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç: ${details.settlement}`);
        console.log(`  –ö–û–ê–¢–£–£: ${details.koatuu}`);
        console.log(`  –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏: ${details.coordinates}`);
        console.log(`  –°—Ç–∞—Ç—É—Å: ${details.auctionStatus}`);
        console.log(`  –£—á–∞—Å–Ω–∏–∫–∏: ${details.participantsCount}`);
        console.log(`  –§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞: ${details.finalPrice}`);
        console.log(`  –ó—Ä–æ—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∏: ${details.priceIncreasePercent}%`);
        console.log(`  –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å: ${details.winner}`);
        console.log(`  –°—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–≤–∞–∂–Ω–æ–≥–æ –ø—Ä–∞–≤–∞: ${details.preferentialRightStatus}`);
        
        // –ó–±–∏—Ä–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É –∑ auction.prozorro.sale
        console.log(`üîç –ó–±–∏—Ä–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É...`);
        const auctionResults = await analyzeAuctionResults(page, auctionUrl, details.startPrice);
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞—É–∫—Ü—ñ–æ–Ω—É
        if (auctionResults.participantsCount !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
            details.participantsCount = auctionResults.participantsCount;
            console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤: ${details.participantsCount}`);
        }
        if (auctionResults.finalPrice !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
            details.finalPrice = auctionResults.finalPrice;
            console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ —Ñ—ñ–Ω–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å: ${details.finalPrice}`);
        }
        if (auctionResults.winner !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
            details.winner = auctionResults.winner;
            console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è: ${details.winner}`);
        }
        // –í—ñ–¥—Å–æ—Ç–æ–∫ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∏ –±—É–¥–µ —Ä–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–∏–π —Ñ–æ—Ä–º—É–ª–æ—é –≤ Google –¢–∞–±–ª–∏—Ü—ñ
        if (auctionResults.preferentialRightStatus !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
            details.preferentialRightStatus = auctionResults.preferentialRightStatus;
            console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–≤–∞–∂–Ω–æ–≥–æ –ø—Ä–∞–≤–∞: ${details.preferentialRightStatus}`);
        }
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ —à—É–∫–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –Ω–∞ ua.land
        // –®—É–∫–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ, —è–∫—â–æ –Ω–µ –≤–∏—Å—Ç–∞—á–∞—î –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–ª–∏–≤–∏—Ö –ø–æ–ª—ñ–≤
        const needsAdditionalData = 
            details.region === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ' || 
            details.settlement === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ' || 
            details.coordinates === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ' || 
            details.koatuu === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ' ||
            details.normativePrice === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ' ||
            details.expertPrice === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ' ||
            details.cadastralNumber === '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            
        if (needsAdditionalData) {
            console.log(`üîç –î–µ—è–∫—ñ –¥–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ prozorro.sale, —à—É–∫–∞—é –Ω–∞ ua.land...`);
            const additionalDetails = await getAuctionDetailsFromUaLand(page, auctionUrl);
            
            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ, —è–∫—â–æ –∑–Ω–∞–π—à–ª–∏ —â–æ—Å—å –Ω–æ–≤–µ
            if (additionalDetails.region !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.region = additionalDetails.region;
                console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –æ–±–ª–∞—Å—Ç—å: ${details.region}`);
            }
            if (additionalDetails.settlement !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.settlement = additionalDetails.settlement;
                console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç: ${details.settlement}`);
            }
            if (additionalDetails.coordinates !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.coordinates = additionalDetails.coordinates;
                console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏: ${details.coordinates}`);
            }
            if (additionalDetails.koatuu !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.koatuu = additionalDetails.koatuu;
                console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –ö–û–ê–¢–£–£: ${details.koatuu}`);
            }
            if (additionalDetails.normativePrice !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.normativePrice = additionalDetails.normativePrice;
                console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É –æ—Ü—ñ–Ω–∫—É: ${details.normativePrice}`);
            }
            if (additionalDetails.expertPrice !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.expertPrice = additionalDetails.expertPrice;
                console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –µ–∫—Å–ø–µ—Ä—Ç–Ω—É –æ—Ü—ñ–Ω–∫—É: ${details.expertPrice}`);
            }
            if (additionalDetails.cadastralNumber !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.cadastralNumber = additionalDetails.cadastralNumber;
                console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä: ${details.cadastralNumber}`);
            }
            
            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ –ø–æ–ª—è, —è–∫—ñ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º–∏
            if (additionalDetails.organizationName !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.organizationName = additionalDetails.organizationName;
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—é: ${details.organizationName}`);
            }
            if (additionalDetails.contactPerson !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.contactPerson = additionalDetails.contactPerson;
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É –æ—Å–æ–±—É: ${details.contactPerson}`);
            }
            if (additionalDetails.phoneNumber !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.phoneNumber = additionalDetails.phoneNumber;
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ —Ç–µ–ª–µ—Ñ–æ–Ω: ${details.phoneNumber}`);
            }
            if (additionalDetails.auctionDate !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.auctionDate = additionalDetails.auctionDate;
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ –¥–∞—Ç—É –∞—É–∫—Ü—ñ–æ–Ω—É: ${details.auctionDate}`);
            }
            if (additionalDetails.proposalPeriod !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.proposalPeriod = additionalDetails.proposalPeriod;
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ –ø–µ—Ä—ñ–æ–¥ –ø–æ–¥–∞—á—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π: ${details.proposalPeriod}`);
            }
            if (additionalDetails.propertyClassifier !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.propertyClassifier = additionalDetails.propertyClassifier;
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –º–∞–π–Ω–∞: ${details.propertyClassifier}`);
            }
            if (additionalDetails.lotExhibitedBy !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.lotExhibitedBy = additionalDetails.lotExhibitedBy;
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ –Ω–æ–º–µ—Ä –ª–æ—Ç—É: ${details.lotExhibitedBy}`);
            }
            if (additionalDetails.postalCode !== '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ') {
                details.postalCode = additionalDetails.postalCode;
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ –ø–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å: ${details.postalCode}`);
            }
        }
        
        // –°–∫–æ—Ä–æ—á—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–µ—Ä–µ–≤–∞–∂–Ω–æ–≥–æ –ø—Ä–∞–≤–∞
        details.preferentialRight = shortenPreferentialRight(details.preferentialRight);
        
        // –î–æ–¥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ—à—É–∫—É ProZorro
        details.searchPageUrl = searchPageUrl;
        
        return details;
        
    } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–æ—Ä—ñ –¥–∞–Ω–∏—Ö –∑ ${auctionUrl}:`, error.message);
        return {
            url: auctionUrl,
            lotDescription: '–ü–æ–º–∏–ª–∫–∞',
            area: '–ü–æ–º–∏–ª–∫–∞',
            startPrice: '–ü–æ–º–∏–ª–∫–∞',
            normativePrice: '–ü–æ–º–∏–ª–∫–∞',
            expertPrice: '–ü–æ–º–∏–ª–∫–∞',
            cadastralNumber: '–ü–æ–º–∏–ª–∫–∞',
            region: '–ü–æ–º–∏–ª–∫–∞',
            settlement: '–ü–æ–º–∏–ª–∫–∞',
            koatuu: '–ü–æ–º–∏–ª–∫–∞',
            coordinates: '–ü–æ–º–∏–ª–∫–∞',
            auctionStatus: '–ü–æ–º–∏–ª–∫–∞',
            participantsCount: '–ü–æ–º–∏–ª–∫–∞',
            finalPrice: '–ü–æ–º–∏–ª–∫–∞',
            priceIncreasePercent: '–ü–æ–º–∏–ª–∫–∞',
            winner: '–ü–æ–º–∏–ª–∫–∞',
            preferentialRight: '–ü–æ–º–∏–ª–∫–∞',
            searchPageUrl: searchPageUrl
        };
    }
}

// –ö–µ—à –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è URL, —è–∫—ñ –≤–∂–µ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ
let urlCache = new Set();

async function isUrlAlreadyInSheet(url, spreadsheetId) {
    try {
        // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
        if (urlCache.has(url)) {
            return true;
        }
        
        const sheets = getGoogleSheets();
        
        // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ URL –∑ –∫–æ–ª–æ–Ω–∫–∏ A
        const response = await sheets.spreadsheets.values.get({
            spreadsheetId,
            range: '–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞!A:A',
        });
        
        if (response.data.values) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –Ω–∞—à URL –≤ —Ç–∞–±–ª–∏—Ü—ñ
            const isDuplicate = response.data.values.some(row => row[0] === url);
            
            // –î–æ–¥–∞—î–º–æ –≤ –∫–µ—à, —è–∫—â–æ –∑–Ω–∞–π—à–ª–∏ –¥—É–±–ª—ñ–∫–∞—Ç
            if (isDuplicate) {
                urlCache.add(url);
            }
            
            return isDuplicate;
        }
        
        return false;
    } catch (error) {
        console.log(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤: ${error.message}`);
        return false; // –£ —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏ –¥–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É (–º–æ–∂–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –ø—Ä–∏ –ø–æ—á–∞—Ç–∫—É –Ω–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫—É)
function clearUrlCache() {
    urlCache.clear();
    console.log('üßπ –ö–µ—à URL –æ—á–∏—â–µ–Ω–æ');
}

async function addRowToAnalyticsSheet(rowData, spreadsheetId) {
    try {
        const sheets = getGoogleSheets();
        
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤—ñ–ª—å–Ω–∏–π —Ä—è–¥–æ–∫
        const response = await sheets.spreadsheets.values.get({
            spreadsheetId,
            range: '–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞!A:A',
        });
        
        let nextRow = 1;
        if (response.data.values) {
            nextRow = response.data.values.length + 1;
        }
        
        // –Ø–∫—â–æ —Ü–µ –ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫, –¥–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        if (nextRow === 1) {
            const headers = [
                'URL', '–û–ø–∏—Å –ª–æ—Ç—É', '–ü–ª–æ—â–∞ –¥—ñ–ª—è–Ω–∫–∏, –≥–∞', '–°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞', 
                '–¶—ñ–Ω–∞ –∑–∞ –≥–∞ –≤ $', '–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω', '–ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω',
                '–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä', '–û–±–ª–∞—Å—Ç—å', '–ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç', '–ö–û–ê–¢–£–£', '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –æ–±\'—î–∫—Ç—É',
                '–°—Ç–∞—Ç—É—Å –∞—É–∫—Ü—ñ–æ–Ω—É', '–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤', '–§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å', '–§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –≥–∞',
                '–í—ñ–¥—Å–æ—Ç–æ–∫ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∏', '–ü–µ—Ä–µ–º–æ–∂–µ—Ü—å', 'ID –ø–µ—Ä–µ–º–æ–∂—Ü—è', '–ü–µ—Ä–µ–≤–∞–∂–Ω–µ –ø—Ä–∞–≤–æ',
                '–û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è', '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ –æ—Å–æ–±–∞', '–¢–µ–ª–µ—Ñ–æ–Ω', '–î–∞—Ç–∞ –∞—É–∫—Ü—ñ–æ–Ω—É',
                '–ü–µ—Ä—ñ–æ–¥ –ø–æ–¥–∞—á—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π', '–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –º–∞–π–Ω–∞', '–ù–æ–º–µ—Ä –ª–æ—Ç—É', '–ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å',
                '–°—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–æ—à—É–∫—É ProZorro'
            ];
            await sheets.spreadsheets.values.update({
                spreadsheetId,
                range: '–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞!A1',
                valueInputOption: 'RAW',
                resource: { values: [headers] },
            });
            nextRow = 2; // –ù–∞—Å—Ç—É–ø–Ω–∏–π —Ä—è–¥–æ–∫ –ø—ñ—Å–ª—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤
        }
        
        // –î–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫ –¥–∞–Ω–∏—Ö
        const currentRow = nextRow; // –ù–æ–º–µ—Ä –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä—è–¥–∫–∞
        const row = [
            rowData.url,
            rowData.lotDescription,
            rowData.area,
            rowData.startPrice,
            `=IF(AND(ISNUMBER(D${currentRow}),ISNUMBER(C${currentRow})),D${currentRow}/C${currentRow}/'–∑–º—ñ–Ω–Ω—ñ'!B2,"")`, // –¶—ñ–Ω–∞ –∑–∞ –≥–∞ –≤ $ - —Ñ–æ—Ä–º—É–ª–∞
            rowData.normativePrice,
            rowData.expertPrice,
            rowData.cadastralNumber,
            rowData.region,
            rowData.settlement,
            rowData.koatuu,
            rowData.coordinates,
            rowData.auctionStatus,
            rowData.participantsCount,
            rowData.finalPrice,
            `=O${currentRow}/C${currentRow}/'–∑–º—ñ–Ω–Ω—ñ'!$B$2`, // –§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –≥–∞ - —Ñ–æ—Ä–º—É–ª–∞
            `=IF(AND(ISNUMBER(O${currentRow}),ISNUMBER(D${currentRow})),((O${currentRow}-D${currentRow})/D${currentRow})*100,"")`, // –í—ñ–¥—Å–æ—Ç–æ–∫ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è —Ü—ñ–Ω–∏ - —Ñ–æ—Ä–º—É–ª–∞
            rowData.winner,
            rowData.winnerId || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            rowData.preferentialRight,
            rowData.organizationName || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            rowData.contactPerson || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            rowData.phoneNumber || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            rowData.auctionDate || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            rowData.proposalPeriod || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            rowData.propertyClassifier || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            rowData.lotExhibitedBy || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            rowData.postalCode || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            rowData.searchPageUrl || '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ' // –°—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–æ—à—É–∫—É ProZorro
        ];
        
        try {
            await sheets.spreadsheets.values.update({
                spreadsheetId,
                range: `–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞!A${currentRow}`,
                valueInputOption: 'USER_ENTERED',
                resource: { values: [row] },
            });
            
            console.log(`‚úÖ –î–æ–¥–∞–Ω–æ —Ä—è–¥–æ–∫ ${currentRow}: ${rowData.url}`);
            
            // –î–æ–¥–∞—î–º–æ URL –¥–æ –∫–µ—à—É, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏
            urlCache.add(rowData.url);
            
            return true; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ true –ø—Ä–∏ —É—Å–ø—ñ—à–Ω–æ–º—É –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ
            
        } catch (rangeError) {
            // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –∑ –¥—ñ–∞–ø–∞–∑–æ–Ω–æ–º, —Å–ø—Ä–æ–±—É—î–º–æ —Ä–æ–∑—à–∏—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é
            if (rangeError.message.includes('exceeds grid limits')) {
                console.log(`üìè –†–æ–∑—à–∏—Ä—é—é —Ç–∞–±–ª–∏—Ü—é –¥–ª—è —Ä—è–¥–∫–∞ ${currentRow}...`);
                
                // –û—Ç—Ä–∏–º—É—î–º–æ –º–µ—Ç–∞–¥–∞–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ
                const metadata = await sheets.spreadsheets.get({
                    spreadsheetId,
                    ranges: ['–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞!A:AC'],
                    fields: 'sheets.properties'
                });
                
                const sheetId = metadata.data.sheets[0].properties.sheetId;
                const currentRows = metadata.data.sheets[0].properties.gridProperties.rowCount;
                
                // –†–æ–∑—à–∏—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é –Ω–∞ 100 —Ä—è–¥–∫—ñ–≤
                await sheets.spreadsheets.batchUpdate({
                    spreadsheetId,
                    resource: {
                        requests: [{
                            updateSheetProperties: {
                                properties: {
                                    sheetId: sheetId,
                                    gridProperties: {
                                        rowCount: currentRows + 100
                                    }
                                },
                                fields: 'gridProperties.rowCount'
                            }
                        }]
                    }
                });
                
                // –¢–µ–ø–µ—Ä –¥–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫
                await sheets.spreadsheets.values.update({
                    spreadsheetId,
                    range: `–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞!A${currentRow}`,
                    valueInputOption: 'USER_ENTERED',
                    resource: { values: [row] },
                });
                
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ —Ä—è–¥–æ–∫ ${currentRow}: ${rowData.url} (—Ç–∞–±–ª–∏—Ü—é —Ä–æ–∑—à–∏—Ä–µ–Ω–æ)`);
                
                // –î–æ–¥–∞—î–º–æ URL –¥–æ –∫–µ—à—É, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏
                urlCache.add(rowData.url);
                
                return true; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ true –ø—Ä–∏ —É—Å–ø—ñ—à–Ω–æ–º—É –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ
            } else {
                throw rangeError;
            }
        }
        
    } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Ä—è–¥–∫–∞:`, error.message);
        throw error;
    }
}

async function main() {
    const browser = await puppeteer.launch({
        headless: true, // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –±—Ä–∞—É–∑–µ—Ä
        args: ['--no-sandbox', '--disable-setuid-sandbox'],
        defaultViewport: { width: 1400, height: 900 },
    });

    try {
        const page = await browser.newPage();
        await page.setUserAgent(
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
        );

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Google Sheets ID
        const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID;
        if (!spreadsheetId) {
            console.error('‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ GOOGLE_SPREADSHEET_ID –≤ .env —Ñ–∞–π–ª—ñ');
            return;
        }
        
        // –û—Ç—Ä–∏–º—É—î–º–æ BASE_URL –∑ Google —Ç–∞–±–ª–∏—Ü—ñ
        BASE_URL = await getBaseUrlFromGoogleSheet();
        if (!BASE_URL) {
            console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ PROZORRO_BASE_URL –∑ Google —Ç–∞–±–ª–∏—Ü—ñ –∞–±–æ .env —Ñ–∞–π–ª—É');
            return;
        }
        
        // –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞ –∑ Google —Ç–∞–±–ª–∏—Ü—ñ
        const stopWords = await getStopWordsFromGoogleSheet();
        
        // –û—á–∏—â–∞—î–º–æ –∫–µ—à URL –Ω–∞ –ø–æ—á–∞—Ç–∫—É
        clearUrlCache();
        
        // –û—á–∏—â–∞—î–º–æ —Ç–∞–±–ª–∏—Ü—é –ø–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º
        let startRow = 1;
        try {
            const sheets = getGoogleSheets();
            const response = await sheets.spreadsheets.values.get({
                spreadsheetId,
                range: '–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞!A:A',
            });
            
            if (response.data.values) {
                startRow = response.data.values.length + 1;
            }
            console.log(`üìä –ü–æ—á–∏–Ω–∞—é –∑ —Ä—è–¥–∫–∞ ${startRow}`);
        } catch (error) {
            console.log('üìä –ü–æ—á–∏–Ω–∞—é –∑ –ø–µ—Ä—à–æ–≥–æ —Ä—è–¥–∫–∞ (–Ω–æ–≤–∏–π —Ñ–∞–π–ª)');
        }

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ—à—É–∫—É —Ç–∞ –∑–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
        console.log('\nüîç –ü–µ—Ä–µ—Ö–æ–¥–∂—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ—à—É–∫—É...');
        console.log(`üìç URL: ${BASE_URL}`);
        
        await page.goto(BASE_URL, { waitUntil: 'networkidle2', timeout: 60000 });
        
        // –û—á—ñ–∫—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        // –ü–æ—Å—Ç—É–ø–æ–≤–∏–π –∑–±—ñ—Ä –¥–∞–Ω–∏—Ö –∑ –∫–æ–∂–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        let currentPage = 1;
        let totalProcessed = 0;
        let totalSuccess = 0;
        let totalDuplicates = 0;
        let totalFiltered = 0;
        let hasMorePages = true;
        let consecutiveEmptyPages = 0; // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–∏—Ö –ø–æ—Ä–æ–∂–Ω—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫

        while (hasMorePages) {
            console.log(`\nüìÑ === –û–ë–†–û–ë–ö–ê –°–¢–û–†–Ü–ù–ö–ò ${currentPage} ===`);
            
            // –§–æ—Ä–º—É—î–º–æ URL –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            const currentPageUrl = buildPageUrl(BASE_URL, currentPage);
            console.log(`üìç URL —Å—Ç–æ—Ä—ñ–Ω–∫–∏: ${currentPageUrl}`);
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –ø–æ—Ç–æ—á–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
            try {
                await page.goto(currentPageUrl, { waitUntil: 'networkidle2', timeout: 30000 });
                await new Promise(resolve => setTimeout(resolve, 3000));
            } catch (error) {
                console.log(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥—ñ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É ${currentPage}: ${error.message}`);
                consecutiveEmptyPages++;
                if (consecutiveEmptyPages >= 3) {
                    console.log(`‚ö†Ô∏è 3 –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ –ø–æ–º–∏–ª–∫–∏, –∑—É–ø–∏–Ω—è—é –∑–±—ñ—Ä`);
                    break;
                }
                currentPage++;
                continue;
            }
            
            // –ó–±–∏—Ä–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑ –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            const pageLinks = await getAuctionLinks(page);
            
            if (pageLinks.length === 0) {
                console.log(`‚ö†Ô∏è –ù–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ ${currentPage} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ –∞—É–∫—Ü—ñ–æ–Ω—É`);
                consecutiveEmptyPages++;
                if (consecutiveEmptyPages >= 3) {
                    console.log(`‚ö†Ô∏è 3 –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ –ø–æ—Ä–æ–∂–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏, –∑—É–ø–∏–Ω—è—é –∑–±—ñ—Ä`);
                    hasMorePages = false;
                    break;
                }
                currentPage++;
                continue;
            }

            // –°–∫–∏–¥–∞—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫, —è–∫—â–æ –∑–Ω–∞–π—à–ª–∏ –∞—É–∫—Ü—ñ–æ–Ω–∏
            consecutiveEmptyPages = 0;

            console.log(`üìä –ó–Ω–∞–π–¥–µ–Ω–æ ${pageLinks.length} –∞—É–∫—Ü—ñ–æ–Ω—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ ${currentPage}`);

            // –û–±—Ä–æ–±–ª—è—î–º–æ –∫–æ–∂–µ–Ω –∞—É–∫—Ü—ñ–æ–Ω –∑ –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            let pageProcessed = 0;
            let pageSuccess = 0;
            let pageDuplicates = 0;
            let pageFiltered = 0;

            for (let i = 0; i < pageLinks.length; i++) {
                const auctionUrl = pageLinks[i];
                pageProcessed++;
                totalProcessed++;

                try {
                    console.log(`\nüîÑ [–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${currentPage}] –ü–µ—Ä–µ–≤—ñ—Ä—è—é –∞—É–∫—Ü—ñ–æ–Ω ${pageProcessed}/${pageLinks.length}: ${auctionUrl}`);

                    // 1. –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î —Ç–∞–∫–∏–π URL –≤ —Ç–∞–±–ª–∏—Ü—ñ
                    const isDuplicate = await isUrlAlreadyInSheet(auctionUrl, spreadsheetId);
                    if (isDuplicate) {
                        console.log(`‚è≠Ô∏è [–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${currentPage}] –ê—É–∫—Ü—ñ–æ–Ω ${pageProcessed} –ø—Ä–æ–ø—É—â–µ–Ω–æ (–¥—É–±–ª—ñ–∫–∞—Ç): ${auctionUrl}`);
                        pageDuplicates++;
                        totalDuplicates++;
                        continue;
                    }

                    // 2. –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–∑–≤—É –∞—É–∫—Ü—ñ–æ–Ω—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
                    const lotTitle = await getAuctionTitle(page, auctionUrl);
                    
                    // 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏
                    if (shouldSkipAuction(lotTitle, stopWords)) {
                        console.log(`‚è≠Ô∏è [–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${currentPage}] –ê—É–∫—Ü—ñ–æ–Ω ${pageProcessed} –ø—Ä–æ–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é`);
                        pageFiltered++;
                        totalFiltered++;
                        continue;
                    }

                    // 4. –Ø–∫—â–æ –ø—Ä–æ–π—à–ª–∏ –≤—Å—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ - –∑–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ
                    console.log(`‚úÖ [–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${currentPage}] –ê—É–∫—Ü—ñ–æ–Ω ${pageProcessed} –ø—Ä–æ–π—à–æ–≤ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, –∑–±–∏—Ä–∞—é –¥–∞–Ω—ñ...`);
                    const details = await getAuctionDetails(page, auctionUrl, currentPageUrl);

                    // 5. –î–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫ –¥–æ Google —Ç–∞–±–ª–∏—Ü—ñ
                    const wasAdded = await addRowToAnalyticsSheet(details, spreadsheetId);

                    if (wasAdded) {
                        pageSuccess++;
                        totalSuccess++;
                        console.log(`‚úÖ [–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${currentPage}] –ê—É–∫—Ü—ñ–æ–Ω ${pageProcessed} —É—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ`);
                    } else {
                        console.log(`‚è≠Ô∏è [–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${currentPage}] –ê—É–∫—Ü—ñ–æ–Ω ${pageProcessed} –Ω–µ –¥–æ–¥–∞–Ω–æ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ`);
                    }

                    // –ü–∞—É–∑–∞ –º—ñ–∂ –æ–±—Ä–æ–±–∫–æ—é –∞—É–∫—Ü—ñ–æ–Ω—ñ–≤
                    await new Promise(resolve => setTimeout(resolve, 2000));

                } catch (error) {
                    console.error(`‚ùå [–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${currentPage}] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∞—É–∫—Ü—ñ–æ–Ω—É ${pageProcessed}:`, error.message);
                    // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –æ–±—Ä–æ–±–∫—É –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∞—É–∫—Ü—ñ–æ–Ω—É
                    continue;
                }
            }

            console.log(`\nüìä –ü—ñ–¥—Å—É–º–æ–∫ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ${currentPage}:`);
            console.log(`   üìÑ –ê—É–∫—Ü—ñ–æ–Ω—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ: ${pageLinks.length}`);
            console.log(`   ‚úÖ –£—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ: ${pageSuccess}`);
            console.log(`   üîÑ –î—É–±–ª—ñ–∫–∞—Ç—ñ–≤: ${pageDuplicates}`);
            console.log(`   üö´ –í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: ${pageFiltered}`);
            console.log(`   ‚ùå –ü–æ–º–∏–ª–æ–∫: ${pageProcessed - pageSuccess - pageDuplicates - pageFiltered}`);

            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
            currentPage++;

            // –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª—É
            if (currentPage > 100) {
                console.log(`‚ö†Ô∏è –î–æ—Å—è–≥–Ω—É—Ç–æ –ª—ñ–º—ñ—Ç —Å—Ç–æ—Ä—ñ–Ω–æ–∫ (100), –∑—É–ø–∏–Ω—è—é –∑–±—ñ—Ä`);
                hasMorePages = false;
                break;
            }
        }

        console.log(`\nüéâ === –ó–ê–ì–ê–õ–¨–ù–ò–ô –ü–Ü–î–°–£–ú–û–ö ===`);
        console.log(`   üìÑ –û–±—Ä–æ–±–ª–µ–Ω–æ —Å—Ç–æ—Ä—ñ–Ω–æ–∫: ${currentPage}`);
        console.log(`   üìä –í—Å—å–æ–≥–æ –∞—É–∫—Ü—ñ–æ–Ω—ñ–≤: ${totalProcessed}`);
        console.log(`   ‚úÖ –£—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ: ${totalSuccess}`);
        console.log(`   üîÑ –î—É–±–ª—ñ–∫–∞—Ç—ñ–≤: ${totalDuplicates}`);
        console.log(`   üö´ –í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: ${totalFiltered}`);
        console.log(`   ‚ùå –ü–æ–º–∏–ª–æ–∫: ${totalProcessed - totalSuccess - totalDuplicates - totalFiltered}`);
        console.log(`   üßπ –†–æ–∑–º—ñ—Ä –∫–µ—à—É URL: ${urlCache.size}`);

    } finally {
        await browser.close();
    }
}

async function analyzeAuctionResults(page, auctionUrl, startPrice) {
    console.log(`üîç –ê–Ω–∞–ª—ñ–∑—É—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É –∑: ${auctionUrl}`);
    
    try {
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∞—É–∫—Ü—ñ–æ–Ω—É (–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π URL)
        const resultsUrl = auctionUrl.replace('https://prozorro.sale/auction/', 'https://auction.prozorro.sale/');
        if (page.url() !== resultsUrl) {
            await page.goto(resultsUrl, { waitUntil: 'networkidle2', timeout: 30000 });
            await new Promise(resolve => setTimeout(resolve, 2000));
        }
        
        // –ó–±–∏—Ä–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É
        const results = await page.evaluate(() => {
            const resultsWrapper = document.querySelector('.results-wrapper');
            if (!resultsWrapper) {
                return {
                    participantsCount: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    finalPrice: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    winner: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
                    preferentialRightStatus: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
                };
            }
            
            const allResults = resultsWrapper.querySelectorAll('.results');
            let participantsCount = allResults.length.toString();
            let finalPrice = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let winner = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let preferentialRightStatus = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            
            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è
            const winnerElement = resultsWrapper.querySelector('.results.is-winner');
            if (winnerElement) {
                const winnerNameElement = winnerElement.querySelector('.results__text');
                if (winnerNameElement) {
                    winner = winnerNameElement.textContent.trim();
                }
                
                const winnerPriceElement = winnerElement.querySelector('.results__sum');
                if (winnerPriceElement) {
                    finalPrice = winnerPriceElement.textContent.trim().replace(/[^\d.,]/g, '').replace(',', '.');
                }
            }
            
            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —É—á–∞—Å–Ω–∏–∫–∞ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º —Ç–∞ –∞–Ω–∞–ª—ñ–∑—É—î–º–æ –π–æ–≥–æ —Å—Ç–∞—Ç—É—Å
            const priorityBidder = resultsWrapper.querySelector('.results__priority-bidder, .results__warning.results__priority-bidder');
            if (priorityBidder) {
                const priorityBidderContainer = priorityBidder.closest('.results');
                if (priorityBidderContainer) {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —É—á–∞—Å–Ω–∏–∫ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º –ø–µ—Ä–µ–º–æ–∂—Ü–µ–º
                    if (priorityBidderContainer.classList.contains('is-winner')) {
                        preferentialRightStatus = '–°–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º';
                    } else {
                        // –£—á–∞—Å–Ω–∏–∫ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º —î, –∞–ª–µ –Ω–µ –≤–∏–≥—Ä–∞–≤ - –∑–Ω–∞—á–∏—Ç—å –Ω–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è
                        preferentialRightStatus = '–ù–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º';
                    }
                }
            } else {
                // –Ø–∫—â–æ –Ω–µ–º–∞—î —É—á–∞—Å–Ω–∏–∫–∞ –∑ –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –π–æ–≥–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å
                const priorityStep = document.querySelector('.priority-step');
                if (priorityStep) {
                    const priorityText = priorityStep.textContent.trim().toLowerCase();
                    if (priorityText.includes('–±—É–≤ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π')) {
                        preferentialRightStatus = '–ë—É–≤ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π';
                    } else if (priorityText.includes('–Ω–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è')) {
                        preferentialRightStatus = '–ù–µ —Å–∫–æ—Ä–∏—Å—Ç–∞–≤—Å—è –ø–µ—Ä–µ–≤–∞–∂–Ω–∏–º –ø—Ä–∞–≤–æ–º';
                    }
                } else {
                    preferentialRightStatus = '–ù–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–µ—Ä–µ–≤–∞–∂–Ω–µ –ø—Ä–∞–≤–æ';
                }
            }
            
            return {
                participantsCount,
                finalPrice,
                winner,
                preferentialRightStatus
            };
        });
        
        console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω—É:`);
        console.log(`  –£—á–∞—Å–Ω–∏–∫—ñ–≤: ${results.participantsCount}`);
        console.log(`  –§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞: ${results.finalPrice}`);
        console.log(`  –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å: ${results.winner}`);
        console.log(`  –°—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–≤–∞–∂–Ω–æ–≥–æ –ø—Ä–∞–≤–∞: ${results.preferentialRightStatus}`);
        
        return results;
        
    } catch (error) {
        console.log(`‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª—ñ–∑—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∞—É–∫—Ü—ñ–æ–Ω—É: ${error.message}`);
        return {
            participantsCount: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            finalPrice: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            winner: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
            preferentialRightStatus: '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
        };
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
export { getAuctionDetailsFromUaLand, getAuctionDetails, analyzeAuctionResults };

main().catch((e) => {
    console.error(e);
    process.exit(1);
});
