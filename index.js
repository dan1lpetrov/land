import 'dotenv/config';
import puppeteer from 'puppeteer';
import { google } from 'googleapis';
import dotenv from 'dotenv';

dotenv.config();

let BASE = process.env.BASE_URL; // –±—É–¥–µ –æ–Ω–æ–≤–ª–µ–Ω–æ –∑ Google —Ç–∞–±–ª–∏—Ü—ñ

function absolutize(url) {
    if (!url) return null;
    if (url.startsWith('http')) return url;
    const base = new URL(BASE);
    return new URL(url, `${base.protocol}//${base.host}`).toString();
}

function buildPageUrl(baseUrl, pageNumber) {
    const url = new URL(baseUrl);
    if (pageNumber === 1) {
        url.searchParams.delete('page');
    } else {
        url.searchParams.set('page', pageNumber.toString());
    }
    return url.toString();
}

async function getAuctionLinks(page) {
    console.log('üîç –®—É–∫–∞—é –µ–ª–µ–º–µ–Ω—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ...');
    
    // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∏–º–æ, —á–∏ —î .MuiPaper-root –µ–ª–µ–º–µ–Ω—Ç–∏
    const paperElements = await page.$$('.MuiPaper-root');
    console.log(`üìÑ –ó–Ω–∞–π–¥–µ–Ω–æ .MuiPaper-root –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: ${paperElements.length}`);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ –≤–∞—à XPath —Å–µ–ª–µ–∫—Ç–æ—Ä
    const xpathSelector = './/a[starts-with(@href,\'/auctions/\')][descendant::h4[contains(@class,\'MuiTypography-h4\')]]';
    const xpathLinks = await page.evaluate((xpath) => {
        const result = document.evaluate(
            xpath,
            document,
            null,
            XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,
            null
        );
        return result.snapshotLength;
    }, xpathSelector);
    console.log(`üîó –ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–∏–ª–∞–Ω—å –∑–∞ XPath: ${xpathLinks}`);
    
    // –°–ø—Ä–æ–±—É—î–º–æ —Ä—ñ–∑–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä—ñ–≤
    const allLinks = await page.$$eval('a[href^="/auctions/"]', (links) => {
        return links.map(link => ({
            href: link.getAttribute('href'),
            text: link.textContent?.trim(),
            hasTarget: link.hasAttribute('target'),
            target: link.getAttribute('target'),
            hasH4: !!link.querySelector('h4'),
            h4Text: link.querySelector('h4')?.textContent?.trim()
        }));
    });
    
    console.log(`üîó –í—Å—å–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω—å –∑ /auctions/: ${allLinks.length}`);
    console.log('üìã –î–µ—Ç–∞–ª—ñ –∑–Ω–∞–π–¥–µ–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å:');
    allLinks.forEach((link, index) => {
        console.log(`  ${index + 1}. ${link.href} | "${link.text}" | target="${link.target}" | hasH4=${link.hasH4} | h4Text="${link.h4Text}"`);
    });
    
    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–∞—à XPath —Å–µ–ª–µ–∫—Ç–æ—Ä
    const links = await page.evaluate((xpath) => {
        const result = document.evaluate(
            xpath,
            document,
            null,
            XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,
            null
        );
        
        const out = [];
        for (let i = 0; i < result.snapshotLength; i++) {
            const node = result.snapshotItem(i);
            if (node && node.getAttribute('href')) {
                out.push(node.getAttribute('href'));
            }
        }
        return out;
    }, xpathSelector);

    console.log(`‚úÖ –§—ñ–Ω–∞–ª—å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç XPath: ${links.length} –ø–æ—Å–∏–ª–∞–Ω—å`);
    return [...new Set(links)];
}

async function getAuctionDetails(page, auctionUrl) {
    console.log(`üîç –ó–±–∏—Ä–∞—é –¥–∞–Ω—ñ –∑: ${auctionUrl}`);
    
    try {
        await page.goto(auctionUrl, { waitUntil: 'networkidle2', timeout: 30000 });
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        console.log('‚è≥ –û—á—ñ–∫—É—é –ø–æ–≤–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏...');
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        // –†–æ–∑–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏
        console.log('üìã –†–æ–∑–∫—Ä–∏–≤–∞—é –≤—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏...');
        try {
            const accordionSelector = '.MuiAccordion-root .MuiAccordionSummary-root';
            await page.waitForSelector(accordionSelector, { timeout: 5000 });
            
            // –û—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å accordion –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
            const accordionCount = await page.evaluate(() => {
                return document.querySelectorAll('.MuiAccordion-root .MuiAccordionSummary-root').length;
            });
            
            console.log(`  –ó–Ω–∞–π–¥–µ–Ω–æ ${accordionCount} accordion –µ–ª–µ–º–µ–Ω—Ç—ñ–≤`);
            
            // –†–æ–∑–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏ —á–µ—Ä–µ–∑ JavaScript
            await page.evaluate(() => {
                const accordions = document.querySelectorAll('.MuiAccordion-root');
                accordions.forEach(accordion => {
                    const summary = accordion.querySelector('.MuiAccordionSummary-root');
                    if (summary && !accordion.classList.contains('Mui-expanded')) {
                        summary.click();
                    }
                });
            });
            
            console.log('  ‚úÖ –í—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏ —Ä–æ–∑–∫—Ä–∏—Ç–æ —á–µ—Ä–µ–∑ JavaScript');
            
            // –û—á—ñ–∫—É—î–º–æ –ø–æ–≤–Ω–æ–≥–æ —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è
            await new Promise(resolve => setTimeout(resolve, 1000));
            console.log('‚úÖ –í—Å—ñ accordion –µ–ª–µ–º–µ–Ω—Ç–∏ —Ä–æ–∑–∫—Ä–∏—Ç–æ');
        } catch (e) {
            console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ–∑–∫—Ä–∏—Ç—Ç—ñ accordion –µ–ª–µ–º–µ–Ω—Ç—ñ–≤');
        }
        
        // –û—á—ñ–∫—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É
        try {
            await page.waitForSelector('h3.MuiTypography-colorPrimary, [data-testid="price"], .price, .start-price, .initial-price', { timeout: 5000 });
        } catch (e) {
            console.log('‚ö†Ô∏è –¶—ñ–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–¥–æ–≤–∂—É—é...');
        }
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è JavaScript
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // –û—á—ñ–∫—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
        try {
            await page.waitForSelector('h4', { timeout: 5000 });
        } catch (e) {
            // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –±–µ–∑ –ø–æ–º–∏–ª–∫–∏
        }
        
        try {
            await page.waitForSelector('h3', { timeout: 5000 });
        } catch (e) {
            // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –±–µ–∑ –ø–æ–º–∏–ª–∫–∏
        }
        
        
        

        

        
        // –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ accordion –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
        console.log('üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ accordion –µ–ª–µ–º–µ–Ω—Ç—ñ–≤:');
        const accordionInfo = await page.evaluate(() => {
            const accordionElements = document.querySelectorAll('.MuiAccordion-root');
            const accordionData = [];
            
            accordionElements.forEach((accordion, index) => {
                const summary = accordion.querySelector('.MuiAccordionSummary-root');
                const details = accordion.querySelector('.MuiAccordionDetails-root');
                const isExpanded = accordion.classList.contains('Mui-expanded');
                const summaryText = summary ? summary.textContent.trim() : '–ù–µ–º–∞—î —Ç–µ–∫—Å—Ç—É';
                const detailsText = details ? details.textContent.trim() : '';
                
                accordionData.push({
                    index: index + 1,
                    isExpanded,
                    hasSummary: !!summary,
                    hasDetails: !!details,
                    summaryText,
                    detailsText: detailsText.substring(0, 100)
                });
            });
            
            return {
                count: accordionElements.length,
                accordions: accordionData
            };
        });
        
        console.log(`  –ó–Ω–∞–π–¥–µ–Ω–æ accordion –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: ${accordionInfo.count}`);
        accordionInfo.accordions.forEach(acc => {
            console.log(`  Accordion ${acc.index}: expanded=${acc.isExpanded}, hasSummary=${acc.hasSummary}, hasDetails=${acc.hasDetails}`);
            console.log(`    –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${acc.summaryText}`);
            if (acc.detailsText) {
                console.log(`    –î–µ—Ç–∞–ª—ñ: ${acc.detailsText}...`);
            }
        });
        
        // –ó–±–∏—Ä–∞—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
        const details = await page.evaluate(() => {
            // URL
            const url = window.location.href;
            
            // –¢–µ–ø–µ—Ä –≤—Å—ñ accordion —Ä–æ–∑–∫—Ä–∏—Ç—ñ, –∑–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ –∑–∞ –≤–∞—à–∏–º–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏
            let lotDescription = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let area = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let startPrice = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let normativePrice = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let expertPrice = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let rentalRate = '';
            let cadastralNumber = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let region = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let settlement = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let organizationName = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let rentalDates = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let contactPerson = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let phoneNumber = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let auctionDate = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            let proposalPeriod = '–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
            
            // –û–ø–∏—Å –ª–æ—Ç—É
            const lotDescElement = document.querySelector('.MuiGrid-spacing-xs-3 div:nth-of-type(3) div.MuiAccordionDetails-root');
            if (lotDescElement && lotDescElement.textContent.trim()) {
                lotDescription = lotDescElement.textContent.trim();
            }
            
            // –ü–ª–æ—â–∞ –∑–µ–º–µ–ª—å–Ω–æ—ó –¥—ñ–ª—è–Ω–∫–∏, –≥–∞
            // –°–ø—Ä–æ–±—É—î–º–æ —Ä—ñ–∑–Ω—ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ñ —Å–µ–ª–µ–∫—Ç–æ—Ä–∏
            let areaElement = null;
            
            // –í–∞—Ä—ñ–∞–Ω—Ç 1: div:nth-of-type(4) h5
            areaElement = document.querySelector('div:nth-of-type(4) h5');
            if (!areaElement || !areaElement.textContent.trim()) {
                // –í–∞—Ä—ñ–∞–Ω—Ç 2: —à—É–∫–∞—î–º–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ
                const mainContainer = document.querySelector('main') || document.querySelector('.MuiContainer-root') || document.body;
                areaElement = mainContainer.querySelector('div:nth-of-type(4) h5');
            }
            if (!areaElement || !areaElement.textContent.trim()) {
                // –í–∞—Ä—ñ–∞–Ω—Ç 3: —à—É–∫–∞—î–º–æ —Å–µ—Ä–µ–¥ –≤—Å—ñ—Ö h5 –∑ —á–∏—Å–ª–æ–≤–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º
                const allH5 = document.querySelectorAll('h5');
                for (const h5 of allH5) {
                    const text = h5.textContent.trim();
                    if (text && /^\d+\.?\d*$/.test(text)) { // –ß–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                        areaElement = h5;
                        break;
                    }
                }
            }
            
            if (areaElement && areaElement.textContent.trim()) {
                area = areaElement.textContent.trim();
            }
            
            // –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –ø–ª–æ—â—ñ
            const areaSelectorDebug = areaElement;
            const areaSelectorText = areaSelectorDebug ? areaSelectorDebug.textContent.trim() : '–ù–ï –ó–ù–ê–ô–î–ï–ù–û';
            const areaSelectorClasses = areaSelectorDebug ? areaSelectorDebug.className : '–ù–ï –ó–ù–ê–ô–î–ï–ù–û';
            const areaSelectorParent = areaSelectorDebug && areaSelectorDebug.parentElement ? areaSelectorDebug.parentElement.className : '–ù–ï –ó–ù–ê–ô–î–ï–ù–û';
            
            // –°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞
            const startPriceElement = document.querySelector('h3.MuiTypography-colorPrimary');
            if (startPriceElement && startPriceElement.textContent.trim()) {
                const priceText = startPriceElement.textContent.trim();
                // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ –∫—Ä—ñ–º —Ü–∏—Ñ—Ä, –∫—Ä–∞–ø–∫–∏ —Ç–∞ –∫–æ–º–∏
                startPrice = priceText.replace(/[^\d.,]/g, '');
            }
            
            // –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
            const allH6Elements = document.querySelectorAll('h6');
            for (const h6 of allH6Elements) {
                const text = h6.textContent.trim();
                if (text === '–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω:') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h6.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                        const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                        if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                            normativePrice = valueElement.textContent.trim().replace(/[^\d.,]/g, '');
                            break;
                        }
                    }
                }
            }
            
            // –ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
            for (const h6 of allH6Elements) {
                const text = h6.textContent.trim();
                if (text === '–ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω:') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h6.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                        const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                        if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                            expertPrice = valueElement.textContent.trim().replace(/[^\d.,]/g, '');
                            break;
                        }
                    }
                }
            }
            
            // –û—Ä–µ–Ω–¥–Ω–∞ —Å—Ç–∞–≤–∫–∞ (—Å—É–º–∞ –∑–∞ —Ä—ñ–∫) - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
            for (const h6 of allH6Elements) {
                const text = h6.textContent.trim();
                if (text === '–û—Ä–µ–Ω–¥–Ω–∞ —Å—Ç–∞–≤–∫–∞ (—Å—É–º–∞ –∑–∞ —Ä—ñ–∫):') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h6.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                        const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                        if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                            rentalRate = valueElement.textContent.trim().replace(/[^\d.,]/g, '');
                            break;
                        }
                    }
                }
            }
            
            // –ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä
            const cadastralElement = document.querySelector('.MuiGrid-spacing-xs-1 a.MuiLink-underlineAlways');
            if (cadastralElement && cadastralElement.textContent.trim()) {
                cadastralNumber = cadastralElement.textContent.trim();
            }
            
            // –û–±–ª–∞—Å—Ç—å - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
            for (const h6 of allH6Elements) {
                const text = h6.textContent.trim();
                if (text === '–û–±–ª–∞—Å—Ç—å:') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h6.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                        const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                        if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                            region = valueElement.textContent.trim();
                            break;
                        }
                    }
                }
            }
            
            // –ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
            for (const h6 of allH6Elements) {
                const text = h6.textContent.trim();
                if (text === '–ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç:') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h6.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                        const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                        if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                            settlement = valueElement.textContent.trim();
                            break;
                        }
                    }
                }
            }
            
            // –ü–æ–≤–Ω–∞ —é—Ä–∏–¥–∏—á–Ω–∞ –Ω–∞–∑–≤–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
            for (const h6 of allH6Elements) {
                const text = h6.textContent.trim();
                if (text === '–ü–æ–≤–Ω–∞ —é—Ä–∏–¥–∏—á–Ω–∞ –Ω–∞–∑–≤–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó:') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h6.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                        const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                        if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                            organizationName = valueElement.textContent.trim();
                            break;
                        }
                    }
                }
            }
            
            // –î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É —Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É –æ—Ä–µ–Ω–¥–∏ - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
            for (const h6 of allH6Elements) {
                const text = h6.textContent.trim();
                if (text === '–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É —Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É –æ—Ä–µ–Ω–¥–∏:') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h6.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                        const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                        if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                            rentalDates = valueElement.textContent.trim();
                            break;
                        }
                    }
                }
            }
            
            // –ü–Ü–ë - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
            for (const h6 of allH6Elements) {
                const text = h6.textContent.trim();
                if (text === '–ü–Ü–ë:') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h6.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-grid-md-true
                        const valueElement = parentContainer.querySelector('.MuiGrid-grid-md-true h6');
                        if (valueElement && valueElement.textContent.trim() && valueElement !== h6) {
                            contactPerson = valueElement.textContent.trim();
                            break;
                        }
                    }
                }
            }
            
            // –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É - —à—É–∫–∞—î–º–æ –∑–∞ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞
            for (const h6 of allH6Elements) {
                const text = h6.textContent.trim();
                if (text === '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h6.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ a —Ç–µ–≥ –∑ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
                        const phoneLink = parentContainer.querySelector('a[href^="tel:"]');
                        if (phoneLink && phoneLink.textContent.trim()) {
                            phoneNumber = phoneLink.textContent.trim();
                            break;
                        }
                    }
                }
            }
            
            // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è h6 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
            console.log('üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ h6 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤:');
            console.log(`  –ó–Ω–∞–π–¥–µ–Ω–æ h6 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: ${allH6Elements.length}`);
            for (let i = 0; i < Math.min(allH6Elements.length, 20); i++) {
                const text = allH6Elements[i].textContent.trim();
                if (text.includes('–æ—Ä–µ–Ω–¥') || text.includes('–û—Ä–µ–Ω–¥') || text.includes('–¥–æ–≥–æ–≤–æ—Ä') || text.includes('–î–æ–≥–æ–≤–æ—Ä') || text.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || text.includes('–¢–µ–ª–µ—Ñ–æ–Ω') || text.includes('+')) {
                    console.log(`  h6[${i}]: "${text}"`);
                }
            }
            
            // –î–∞—Ç–∞ –∞—É–∫—Ü—ñ–æ–Ω—É - —à—É–∫–∞—î–º–æ h5 –∑ –¥–∞—Ç–æ—é
            const allH5ForDate = document.querySelectorAll('h5');
            for (const h5 of allH5ForDate) {
                const text = h5.textContent.trim();
                if (text && /\d{2}\.\d{2}\.\d{4}/.test(text)) { // –§–æ—Ä–º–∞—Ç –¥–∞—Ç–∏ DD.MM.YYYY
                    auctionDate = text;
                    break;
                }
            }
            
            // –ü–µ—Ä—ñ–æ–¥ –ø–æ–¥–∞–Ω–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π - —à—É–∫–∞—î–º–æ h5 –∑ —Ç–µ–∫—Å—Ç–æ–º "–ü–µ—Ä—ñ–æ–¥ –ø–æ–¥–∞–Ω–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π"
            const allH5ForProposal = document.querySelectorAll('h5');
            for (const h5 of allH5ForProposal) {
                const text = h5.textContent.trim();
                if (text === '–ü–µ—Ä—ñ–æ–¥ –ø–æ–¥–∞–Ω–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π') {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π div –∑ –∫–ª–∞—Å–æ–º MuiGrid-container
                    const parentContainer = h5.closest('.MuiGrid-container');
                    if (parentContainer) {
                        // –®—É–∫–∞—î–º–æ h6 –µ–ª–µ–º–µ–Ω—Ç –∑ –¥–∞—Ç–∞–º–∏
                        const dateElement = parentContainer.querySelector('h6');
                        if (dateElement && dateElement.textContent.trim()) {
                            proposalPeriod = dateElement.textContent.trim();
                            break;
                        }
                    }
                }
            }
            
            return {
                url,
                lotDescription,
                area,
                startPrice,
                normativePrice,
                expertPrice,
                rentalRate,
                cadastralNumber,
                region,
                settlement,
                organizationName,
                rentalDates,
                contactPerson,
                phoneNumber,
                auctionDate,
                proposalPeriod,
                areaSelectorText,
                areaSelectorClasses,
                areaSelectorParent
            };
        });
        
        console.log(`‚úÖ –ó—ñ–±—Ä–∞–Ω–æ –¥–∞–Ω—ñ –¥–ª—è: ${auctionUrl}`);
        console.log(`üìù –û–ø–∏—Å –ª–æ—Ç—É: ${details.lotDescription.substring(0, 100)}...`);
        console.log(`üìä –ó—ñ–±—Ä–∞–Ω—ñ –¥–∞–Ω—ñ:`);
        console.log(`  –ü–ª–æ—â–∞: ${details.area}`);
        console.log(`  –°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞: ${details.startPrice}`);
        console.log(`  –ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –æ—Ü—ñ–Ω–∫–∞: ${details.normativePrice}`);
        console.log(`  –ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –æ—Ü—ñ–Ω–∫–∞: ${details.expertPrice}`);
        console.log(`  –û—Ä–µ–Ω–¥–Ω–∞ —Å—Ç–∞–≤–∫–∞: ${details.rentalRate}`);
        console.log(`  –ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä: ${details.cadastralNumber}`);
        console.log(`  –û–±–ª–∞—Å—Ç—å: ${details.region}`);
        console.log(`  –ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç: ${details.settlement}`);
        console.log(`  –û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è: ${details.organizationName}`);
        console.log(`  –ü–Ü–ë: ${details.contactPerson}`);
        console.log(`  –¢–µ–ª–µ—Ñ–æ–Ω: ${details.phoneNumber}`);
        console.log(`  –î–∞—Ç–∞ –∞—É–∫—Ü—ñ–æ–Ω—É: ${details.auctionDate}`);
        console.log(`  –ü–µ—Ä—ñ–æ–¥ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π: ${details.proposalPeriod}`);
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä—ñ–≤
        console.log(`üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä—ñ–≤:`);
        console.log(`  –û–ø–∏—Å –ª–æ—Ç—É —Å–µ–ª–µ–∫—Ç–æ—Ä: ${details.lotDescription.substring(0, 50)}...`);
        console.log(`  –ü–ª–æ—â–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä: ${details.area}`);
        console.log(`  –°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä: ${details.startPrice}`);
        
        // –ê–Ω–∞–ª—ñ–∑ –≤—Å—ñ—Ö h5 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
        const h5Analysis = await page.evaluate(() => {
            const h5Elements = document.querySelectorAll('h5');
            const h5Data = [];
            h5Elements.forEach((el, index) => {
                h5Data.push({
                    index: index + 1,
                    text: el.textContent.trim(),
                    classes: el.className,
                    parentClasses: el.parentElement ? el.parentElement.className : 'none'
                });
            });
            return h5Data;
        });
        
        console.log(`üîç –ê–Ω–∞–ª—ñ–∑ –≤—Å—ñ—Ö h5 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ (${h5Analysis.length}):`);
        h5Analysis.forEach((h5, index) => {
            if (index < 10) { // –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 10
                console.log(`  ${h5.index}. "${h5.text}" (–∫–ª–∞—Å–∏: ${h5.classes})`);
            }
        });
        
        // –ê–Ω–∞–ª—ñ–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        const structureAnalysis = await page.evaluate(() => {
            const structure = [];
            
            // –ê–Ω–∞–ª—ñ–∑—É—î–º–æ div –µ–ª–µ–º–µ–Ω—Ç–∏
            const divs = document.querySelectorAll('div');
            divs.forEach((div, index) => {
                const h5InDiv = div.querySelector('h5');
                if (h5InDiv) {
                    structure.push({
                        type: 'div',
                        index: index + 1,
                        hasH5: true,
                        h5Text: h5InDiv.textContent.trim(),
                        divClasses: div.className
                    });
                }
            });
            
            return structure.slice(0, 20); // –ü–µ—Ä—à—ñ 20 div –∑ h5
        });
        
        console.log(`üîç –ê–Ω–∞–ª—ñ–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ div –∑ h5 (${structureAnalysis.length}):`);
        structureAnalysis.forEach((item, index) => {
            if (index < 10) {
                console.log(`  div ${item.index}: "${item.h5Text}" (–∫–ª–∞—Å–∏: ${item.divClasses})`);
            }
        });
        
        // –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –ø–ª–æ—â—ñ
        console.log(`üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –ø–ª–æ—â—ñ:`);
        console.log(`  –°–µ–ª–µ–∫—Ç–æ—Ä: h5:nth-of-type(4)`);
        console.log(`  –ó–Ω–∞–π–¥–µ–Ω–∏–π —Ç–µ–∫—Å—Ç: "${details.areaSelectorText}"`);
        console.log(`  –ö–ª–∞—Å–∏ –µ–ª–µ–º–µ–Ω—Ç–∞: ${details.areaSelectorClasses}`);
        console.log(`  –ö–ª–∞—Å–∏ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞: ${details.areaSelectorParent}`);
        
        return details;
        
    } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–æ—Ä—ñ –¥–∞–Ω–∏—Ö –∑ ${auctionUrl}:`, error.message);
        return {
            url: auctionUrl,
            lotDescription: '–ü–æ–º–∏–ª–∫–∞',
            area: '–ü–æ–º–∏–ª–∫–∞',
            startPrice: '–ü–æ–º–∏–ª–∫–∞',
            normativePrice: '–ü–æ–º–∏–ª–∫–∞',
            expertPrice: '–ü–æ–º–∏–ª–∫–∞',
            rentalRate: '–ü–æ–º–∏–ª–∫–∞',
            cadastralNumber: '–ü–æ–º–∏–ª–∫–∞',
            region: '–ü–æ–º–∏–ª–∫–∞',
            settlement: '–ü–æ–º–∏–ª–∫–∞',
            organizationName: '–ü–æ–º–∏–ª–∫–∞',
            rentalDates: '–ü–æ–º–∏–ª–∫–∞',
            contactPerson: '–ü–æ–º–∏–ª–∫–∞',
            phoneNumber: '–ü–æ–º–∏–ª–∫–∞',
            auctionDate: '–ü–æ–º–∏–ª–∫–∞',
            proposalPeriod: '–ü–æ–º–∏–ª–∫–∞'
        };
    }
}

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Google Sheets API
function getGoogleSheets() {
    const auth = new google.auth.GoogleAuth({
        keyFile: process.env.GOOGLE_APPLICATION_CREDENTIALS || './google-credentials.json',
        scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    });
    
    return google.sheets({ version: 'v4', auth });
}

async function getBaseUrlFromGoogleSheet() {
    try {
        const sheets = getGoogleSheets();
        const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID;
        
        const response = await sheets.spreadsheets.values.get({
            spreadsheetId,
            range: '–∑–º—ñ–Ω–Ω—ñ!B3',
        });
        
        if (response.data.values && response.data.values[0] && response.data.values[0][0]) {
            const baseUrl = response.data.values[0][0].trim();
            console.log(`üìã –û—Ç—Ä–∏–º–∞–Ω–æ BASE_URL –∑ Google —Ç–∞–±–ª–∏—Ü—ñ: ${baseUrl}`);
            return baseUrl;
        } else {
            console.log('‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ BASE_URL –≤ –∫–ª—ñ—Ç–∏–Ω—Ü—ñ –∑–º—ñ–Ω–Ω—ñ!B3, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –∑ .env');
            return process.env.BASE_URL;
        }
    } catch (error) {
        console.log('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è BASE_URL –∑ Google —Ç–∞–±–ª–∏—Ü—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –∑ .env:', error.message);
        return process.env.BASE_URL;
    }
}

async function saveToGoogleSheets(data, spreadsheetId) {
    try {
        const sheets = getGoogleSheets();
        
        // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤
        const headers = ['–õ–æ—Ç', '–ù–∞–∑–≤–∞', '–î–∞—Ç–∞ –∞—É–∫—Ü—ñ–æ–Ω—É', '–ü–ª–æ—â–∞', '–°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞', '–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä', '–ê–¥—Ä–µ—Å–∞', '–ü–æ—Å–∏–ª–∞–Ω–Ω—è'];
        
        // –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–∏—Ö
        const rows = data.map(item => [
            item.lot,
            item.title,
            item.auctionDate,
            item.area,
            item.startPrice,
            item.cadastralNumber,
            item.address,
            item.link
        ]);
        
        // –î–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞ –¥–∞–Ω—ñ
        const values = [headers, ...rows];
        
        // –û—á–∏—â–∞—î–º–æ —ñ—Å–Ω—É—é—á—ñ –¥–∞–Ω—ñ —Ç–∞ –¥–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ
        await sheets.spreadsheets.values.clear({
            spreadsheetId,
            range: 'A:H',
        });
        
        await sheets.spreadsheets.values.update({
            spreadsheetId,
            range: 'A1',
            valueInputOption: 'RAW',
            resource: { values },
        });
        
        console.log(`‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ ${data.length} —Ä—è–¥–∫—ñ–≤ —É Google –¢–∞–±–ª–∏—Ü—é`);
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –≤ Google –¢–∞–±–ª–∏—Ü—é:', error.message);
        throw error;
    }
}

async function addRowToGoogleSheets(rowData, spreadsheetId, rowNumber) {
    try {
        const sheets = getGoogleSheets();
        
        // –Ø–∫—â–æ —Ü–µ –ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫, –¥–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        if (rowNumber === 1) {
            const headers = [
                'URL', '–û–ø–∏—Å –ª–æ—Ç—É', '–ü–ª–æ—â–∞ –∑–µ–º–µ–ª—å–Ω–æ—ó –¥—ñ–ª—è–Ω–∫–∏, –≥–∞', '–°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞', 
                '–¶—ñ–Ω–∞ –∑–∞ –≥–∞ –≤ $', '–ù–æ—Ä–º–∞—Ç–∏–≤–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω', '–ï–∫—Å–ø–µ—Ä—Ç–Ω–∞ –≥—Ä–æ—à–æ–≤–∞ –æ—Ü—ñ–Ω–∫–∞, –≥—Ä–Ω',
                '–°—Ä–æ–∫ –æ–∫—É–ø–Ω–æ—Å—Ç—ñ', '–û—Ä–µ–Ω–¥–Ω–∞ —Å—Ç–∞–≤–∫–∞ (—Å—É–º–∞ –∑–∞ —Ä—ñ–∫)', '–ö–∞–¥–∞—Å—Ç—Ä–æ–≤–∏–π –Ω–æ–º–µ—Ä',
                '–û–±–ª–∞—Å—Ç—å', '–ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç', '–ü–æ–≤–Ω–∞ —é—Ä–∏–¥–∏—á–Ω–∞ –Ω–∞–∑–≤–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó',
                '–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É —Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –¥–æ–≥–æ–≤–æ—Ä—É –æ—Ä–µ–Ω–¥–∏', '–ü–Ü–ë', '–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É',
                '–î–∞—Ç–∞ –∞—É–∫—Ü—ñ–æ–Ω—É', '–ü–µ—Ä—ñ–æ–¥ –ø–æ–¥–∞–Ω–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π'
            ];
            await sheets.spreadsheets.values.update({
                spreadsheetId,
                range: 'A1',
                valueInputOption: 'RAW',
                resource: { values: [headers] },
            });
        }
        
        // –î–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫ –¥–∞–Ω–∏—Ö
        const currentRow = rowNumber + 1; // –ù–æ–º–µ—Ä –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä—è–¥–∫–∞
        const row = [
            rowData.url,
            rowData.lotDescription,
            rowData.area,
            rowData.startPrice,
            `=IF(AND(ISNUMBER(D${currentRow}),ISNUMBER(C${currentRow})),D${currentRow}/C${currentRow}/'–∑–º—ñ–Ω–Ω—ñ'!B2,"")`, // –¶—ñ–Ω–∞ –∑–∞ –≥–∞ –≤ $ - —Ñ–æ—Ä–º—É–ª–∞
            rowData.normativePrice,
            rowData.expertPrice,
            `=IF(ISNUMBER(I${currentRow}),D${currentRow}/I${currentRow},"")`, // –°—Ä–æ–∫ –æ–∫—É–ø–Ω–æ—Å—Ç—ñ - —Ñ–æ—Ä–º—É–ª–∞
            rowData.rentalRate,
            rowData.cadastralNumber,
            rowData.region,
            rowData.settlement,
            rowData.organizationName,
            rowData.rentalDates,
            rowData.contactPerson,
            rowData.phoneNumber,
            rowData.auctionDate,
            rowData.proposalPeriod
        ];
        
        try {
            await sheets.spreadsheets.values.update({
                spreadsheetId,
                range: `A${rowNumber + 1}`,
                valueInputOption: 'USER_ENTERED',
                resource: { values: [row] },
            });
            
            console.log(`‚úÖ –î–æ–¥–∞–Ω–æ —Ä—è–¥–æ–∫ ${rowNumber + 1}: ${rowData.url}`);
            
        } catch (rangeError) {
            // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –∑ –¥—ñ–∞–ø–∞–∑–æ–Ω–æ–º, —Å–ø—Ä–æ–±—É—î–º–æ —Ä–æ–∑—à–∏—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é
            if (rangeError.message.includes('exceeds grid limits')) {
                console.log(`üìè –†–æ–∑—à–∏—Ä—é—é —Ç–∞–±–ª–∏—Ü—é –¥–ª—è —Ä—è–¥–∫–∞ ${rowNumber + 1}...`);
                
                // –û—Ç—Ä–∏–º—É—î–º–æ –º–µ—Ç–∞–¥–∞–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ
                const metadata = await sheets.spreadsheets.get({
                    spreadsheetId,
                    ranges: ['Sheet1!A:H'],
                    fields: 'sheets.properties'
                });
                
                const sheetId = metadata.data.sheets[0].properties.sheetId;
                const currentRows = metadata.data.sheets[0].properties.gridProperties.rowCount;
                
                // –†–æ–∑—à–∏—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é –Ω–∞ 100 —Ä—è–¥–∫—ñ–≤
                await sheets.spreadsheets.batchUpdate({
                    spreadsheetId,
                    resource: {
                        requests: [{
                            updateSheetProperties: {
                                properties: {
                                    sheetId: sheetId,
                                    gridProperties: {
                                        rowCount: currentRows + 100
                                    }
                                },
                                fields: 'gridProperties.rowCount'
                            }
                        }]
                    }
                });
                
                // –¢–µ–ø–µ—Ä –¥–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫
                await sheets.spreadsheets.values.update({
                    spreadsheetId,
                    range: `A${rowNumber + 1}`,
                    valueInputOption: 'USER_ENTERED',
                    resource: { values: [row] },
                });
                
                console.log(`‚úÖ –î–æ–¥–∞–Ω–æ —Ä—è–¥–æ–∫ ${rowNumber + 1}: ${rowData.url} (—Ç–∞–±–ª–∏—Ü—é —Ä–æ–∑—à–∏—Ä–µ–Ω–æ)`);
            } else {
                throw rangeError;
            }
        }
        
    } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ —Ä—è–¥–∫–∞ ${rowNumber + 1}:`, error.message);
        throw error;
    }
}

async function main() {
    const browser = await puppeteer.launch({
        headless: 'new', // –ø–æ—Å—Ç–∞–≤ false, —è–∫—â–æ —Ç—Ä–µ–±–∞ –±–∞—á–∏—Ç–∏ –±—Ä–∞—É–∑–µ—Ä
        args: ['--no-sandbox', '--disable-setuid-sandbox'],
        defaultViewport: { width: 1400, height: 900 },
    });

    try {
        const page = await browser.newPage();
        await page.setUserAgent(
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
        );

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Google Sheets ID
        const spreadsheetId = process.env.GOOGLE_SPREADSHEET_ID;
        if (!spreadsheetId) {
            console.error('‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ GOOGLE_SPREADSHEET_ID –≤ .env —Ñ–∞–π–ª—ñ');
            return;
        }
        
        // –û—Ç—Ä–∏–º—É—î–º–æ BASE_URL –∑ Google —Ç–∞–±–ª–∏—Ü—ñ
        BASE = await getBaseUrlFromGoogleSheet();
        if (!BASE) {
            console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ BASE_URL –∑ Google —Ç–∞–±–ª–∏—Ü—ñ –∞–±–æ .env —Ñ–∞–π–ª—É');
            return;
        }
        
        // –û—á–∏—â–∞—î–º–æ —Ç–∞–±–ª–∏—Ü—é –ø–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º
        // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤ —É —Ç–∞–±–ª–∏—Ü—ñ
        let startRow = 1;
        try {
            const sheets = getGoogleSheets();
            const response = await sheets.spreadsheets.values.get({
                spreadsheetId,
                range: 'A:A',
            });
            
            if (response.data.values) {
                startRow = response.data.values.length + 1;
            }
            console.log(`üìä –ü–æ—á–∏–Ω–∞—é –∑ —Ä—è–¥–∫–∞ ${startRow}`);
        } catch (error) {
            console.log('üìä –ü–æ—á–∏–Ω–∞—é –∑ –ø–µ—Ä—à–æ–≥–æ —Ä—è–¥–∫–∞ (–Ω–æ–≤–∏–π —Ñ–∞–π–ª)');
        }

        // –ó–±–∏—Ä–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑ —É—Å—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫
        console.log('\nüîç –ü–æ—á–∏–Ω–∞—é –∑–±—ñ—Ä –ø–æ—Å–∏–ª–∞–Ω—å –∑ —É—Å—ñ—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫...');
        let allLinks = [];
        let currentPage = 1;
        let rowCounter = startRow - 1;

        while (true) {
            const pageUrl = buildPageUrl(BASE, currentPage);
            console.log(`\nüìÑ –û–±—Ä–æ–±–ª—è—é —Å—Ç–æ—Ä—ñ–Ω–∫—É ${currentPage}: ${pageUrl}`);
            
            try {
                await page.goto(pageUrl, { waitUntil: 'networkidle2', timeout: 30000 });
                
                // –î–æ–¥–∞—Ç–∫–æ–≤–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É
                console.log('‚è≥ –û—á—ñ–∫—É—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É...');
                await new Promise(resolve => setTimeout(resolve, 3000));
                
                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
                const pageLinks = await getAuctionLinks(page);
                
                if (pageLinks.length === 0) {
                    console.log(`‚ö†Ô∏è –°—Ç–æ—Ä—ñ–Ω–∫–∞ ${currentPage} –ø–æ—Ä–æ–∂–Ω—è, –∑—É–ø–∏–Ω—è—é—Å—å`);
                    
                    // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è –ø–æ—Ä–æ–∂–Ω—å–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
                    if (currentPage === 2) {
                        console.log('üîç –î–µ—Ç–∞–ª—å–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ 2:');
                        
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ URL
                        const currentUrl = page.url();
                        console.log(`   –ü–æ—Ç–æ—á–Ω–∏–π URL: ${currentUrl}`);
                        
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
                        const title = await page.title();
                        console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–æ—Ä—ñ–Ω–∫–∏: ${title}`);
                        
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
                        const allLinks = await page.evaluate(() => {
                            const links = document.querySelectorAll('a');
                            return Array.from(links).map(link => ({
                                href: link.getAttribute('href'),
                                text: link.textContent?.trim(),
                                hasH4: !!link.querySelector('h4')
                            }));
                        });
                        
                        console.log(`   –í—Å—å–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ: ${allLinks.length}`);
                        allLinks.forEach((link, index) => {
                            if (link.href && link.href.includes('/auctions/')) {
                                console.log(`     ${index + 1}. ${link.href} | "${link.text}" | hasH4=${link.hasH4}`);
                            }
                        });
                        
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ .MuiPaper-root –µ–ª–µ–º–µ–Ω—Ç–∏
                        const paperElements = await page.$$('.MuiPaper-root');
                        console.log(`   .MuiPaper-root –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: ${paperElements.length}`);
                        
                        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ h4 –µ–ª–µ–º–µ–Ω—Ç–∏
                        const h4Elements = await page.$$('h4');
                        console.log(`   h4 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: ${h4Elements.length}`);
                        
                        // –ó—Ä–æ–±—ñ—Ç—å —Å–∫—Ä—ñ–Ω—à–æ—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É
                        await page.screenshot({ path: `page-${currentPage}-debug.png` });
                        console.log(`   –ó–±–µ—Ä–µ–∂–µ–Ω–æ —Å–∫—Ä—ñ–Ω—à–æ—Ç: page-${currentPage}-debug.png`);
                    }
                    
                    break;
                }
                
                console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${pageLinks.length} –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ ${currentPage}`);
                
                // –û–±—Ä–æ–±–ª—è—î–º–æ –≤—Å—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
                for (const link of pageLinks) {
                    const url = absolutize(link);
                    rowCounter++;
                    
                    console.log(`\nüìã –û–±—Ä–æ–±–ª—è—é ${rowCounter}: ${url}`);
                    
                    const details = await getAuctionDetails(page, url);
                    
                    // –î–æ–¥–∞—î–º–æ —Ä—è–¥–æ–∫ –æ–¥—Ä–∞–∑—É –≤ Google –¢–∞–±–ª–∏—Ü—é
                    await addRowToGoogleSheets(details, spreadsheetId, rowCounter);
                }
                
                currentPage++;
                
            } catch (error) {
                console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ ${currentPage}:`, error.message);
                break;
            }
        }

        console.log(`\n‚úÖ –ó–±—ñ—Ä –¥–∞–Ω–∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û–±—Ä–æ–±–ª–µ–Ω–æ ${currentPage - 1} —Å—Ç–æ—Ä—ñ–Ω–æ–∫, ${rowCounter} –∞—É–∫—Ü—ñ–æ–Ω—ñ–≤`);

    } finally {
        await browser.close();
    }
}

main().catch((e) => {
    console.error(e);
    process.exit(1);
});
